<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Readings on iBlog</title>
    <link>/reading/</link>
    <description>Recent content in Readings on iBlog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-cn</language>
    <copyright>All rights reserved by kingcos.me</copyright>
    <lastBuildDate>Thu, 07 Nov 2019 00:00:00 +0000</lastBuildDate>
    
	<atom:link href="/reading/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>设计模式之美</title>
      <link>/reading/beauties_of_design_patterns/</link>
      <pubDate>Thu, 07 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>/reading/beauties_of_design_patterns/</guid>
      <description>Name Author ISBN     设计模式之美 王争 -     设计原则
 SOLID 原则 - SRP 单一职责原则 SOLID 原则 - OCP 开闭原则 SOLID 原则 - LSP 里式替换原则 SOLID 原则 - ISP 接口隔离原则 SOLID 原则 - DIP 依赖倒置原则 DRY 原则、KISS 原则、YAGNI 原则、LOD 法则  设计模式分类
   创建型 常用的有：单例模式、工厂模式（工厂方法和抽象工厂）、建造者模式。 不常用的有：原型模式。 结构型 常用的有：代理模式、桥接模式、装饰者模式、适配器模式。 不常用的有：门面模式、组合模式、享元模式。 行为型 常用的有：观察者模式、模板模式、策略模式、职责链模式、迭代器模式、状态模式。 不常用的有：访问者模式、备忘录模式、命令模式、解释器模式、中介模式。  重构的目的（why）、对象（what）、时机（when）、方法（how）； 保证重构不出错的技术手段：单元测试和代码的可测试性； 两种不同规模的重构：大重构（大规模高层次）和小重构（小规模低层次）。
面向对象编程因为其具有丰富的特性（封装、抽象、继承、多态），可以实现很多复杂的设计思路，是很多设计原则、设计模式等编码实现的基础。 设计原则是指导我们代码设计的一些经验总结，对于某些场景下，是否应该应用某种设计模式，具有指导意义。比如，“开闭原则”是很多设计模式（策略、模板等）的指导原则。 设计模式是针对软件开发中经常遇到的一些设计问题，总结出来的一套解决方案或者设计思路。应用设计模式的主要目的是提高代码的可扩展性。从抽象程度上来讲，设计原则比设计模式更抽象。设计模式更加具体、更加可执行。 编程规范主要解决的是代码的可读性问题。编码规范相对于设计原则、设计模式，更加具体、更加偏重代码细节、更加能落地。持续的小重构依赖的理论基础主要就是编程规范。 重构作为保持代码质量不下降的有效手段，利用的就是面向对象、设计原则、设计模式、编码规范这些理论。</description>
    </item>
    
    <item>
      <title>10x 程序员工作法</title>
      <link>/reading/efficient_rules_of_work_for_programmers/</link>
      <pubDate>Thu, 01 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>/reading/efficient_rules_of_work_for_programmers/</guid>
      <description>Name Author ISBN     10x 程序员工作法 郑晔 -     本质复杂度（Essential Complexity）和偶然复杂度（Accident Complexity）。 简单来说，本质复杂度就是解决一个问题时，无论怎么做都必须要做的事，而偶然复杂度是因为选用的做事方法不当，而导致要多做的事。
 大部分程序员忙碌解决的问题，都不是程序问题，而是由偶然复杂度导致的问题。
 以终为始； 任务分解； 沟通反馈； 自动化。
 在我看来，所有做软件的人能力都很强，这些问题都只是因为不会工作造成的，但更可怕的是，许多人深陷泥潭而不自知。
 直觉是本能的，无需积累，而洞见是溯因推理（Abductive Reasoning），需要前期进行大量的积累之后，从中发现模式，方能形成洞见。
 你把结果当成了原因，优秀的程序员能够快速解决问题，是因为它已经做了大量积累，有自己的知识体系，任何领域想做到一定的水准都需要刻意练习，而且是大量的刻意练习。
 我希望专栏的读者在学过之后，遇到事情开始动脑想想为什么和怎么做，你的回复让我觉得我的初衷达成了。
 t.cn/EGeYlAA，一个讲本质复杂度和偶然复杂度的视频
 Where are we?（我们现在在哪？） Where are we going?（我们要到哪儿去？） How can we get there?（我们如何到达那里？） 这三个问题实际上是帮我们确定： 现状； 目标； 实现路径。 如果一个人能够清晰地回答出这三个问题，通常意味着他对要做的事有着清晰的认识。
 工作。比如，
 比如，当一个产品经理给我交代一个要开发的功能特性时，我通常会问他这样一些问题： 为什么要做这个特性，它会给用户带来怎样的价值？ 什么样的用户会用到这个特性，他们在什么场景下使用，他们又会怎样使用它？ 达成这个目的是否有其它手段？是不是一定要开发一个系统？ 这个特性上线之后，怎么衡量它的有效性？
 给出思考框架是为了让你明白为什么要提出问题，而具体问题要怎么问，就可以遵循下面这四项原则： 以终为始； 任务分解； 沟通反馈； 自动化。</description>
    </item>
    
    <item>
      <title>成为乔布斯</title>
      <link>/reading/becoming_steve_jobs/</link>
      <pubDate>Thu, 01 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>/reading/becoming_steve_jobs/</guid>
      <description>Name Author ISBN     成为乔布斯 [美] 布伦特·施兰德 / [美] 里克·特策利 9787508662404     这不是关于成功的故事，而是关于成长的故事。
 他回答问题时字斟句酌，即使是回答意料之外的问题也是如此。
 麦肯纳是史蒂夫早期最重要的导师，他曾经说过“史蒂夫在市场营销方面有着过人的天赋，在 22 岁的时候已经有了敏锐的直觉。他知道索尼的伟大之处，也了解英特尔的伟大之处，他希望自己的产品也能享有如此声誉”。
 他曾在邮件里对我说：“回顾过去没有什么意义，我情愿向前看。”
 NeXT 保证了他职业生涯的后续发展，而皮克斯给了他财务自由。
 史蒂夫对汽车的热爱就如同他对莲黑胶唱机（Linn Sondek）的热爱，以及对摄影大师安塞尔·亚当斯（Ansel Adams）的铂盐印相法的热爱。
 他对于电脑的设想直接来源于汽车：功能强大、造型优美、效率高超，没有多余的配件。
 罗伯特·弗里德兰（Robert Friedland）和史蒂夫打了声招呼，正是弗里德兰促成了史蒂夫 1974 年的印度朝圣之旅。
 你们应该找最优秀的人，不能退而求其次。”
 他极度缺乏耐心，认为唯一值得花力气去解决的问题应该是需要好几年才能解决的难题。
 相信自己是特别的，并且想把事情做到完美，这是史蒂夫从小接受的教育。
 沃兹是工程天才，史蒂夫则是天才的成就者，
 那个时代所传递出的信息显而易见：质疑一切，特别是权威；勇于尝试；上路流浪；无所畏惧；创造一个更美好的世界。
 史蒂夫去印度是为了追随朋友罗伯特·弗里德兰的脚步，弗里德兰就是苹果园的主人。
 1975 年的电脑产业跟“个人”完全不沾边，编写软件的过程劳心劳力、无比漫长。
 在加州，一大群即将完全颠覆电脑产业的人组建了一个定期聚会的兴趣小组，名为“家酿计算机俱乐部”（Homebrew Computer Club）。
 我觉得史蒂夫的直觉是要带给普通人他们闻所未闻的技术，而且他们并没有意识到自己需要这种技术，从而彻底改变他们的生活。这种技术应该是友好、平易近人、讨人喜欢的。
 正如克劳所说，把公司命名为苹果是一个伟大的决定，史蒂夫从内心深处相信自己的直觉，并根据直觉起了这个名字。相信直觉是优秀的企业家必备的个性特点，对于想要创造出人们闻所未闻的产品并以此谋生的人来说，直觉是不可或缺的。
 史蒂夫与群体性思维向来格格不入，他是一位独立的自由思想者，想法常常与所在的群体冲突。
 他只在意把这项强大的技术带给普通大众后会产生的影响。</description>
    </item>
    
    <item>
      <title>蒂姆·库克传</title>
      <link>/reading/about_tim_cook/</link>
      <pubDate>Thu, 01 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>/reading/about_tim_cook/</guid>
      <description>   Name Author ISBN     蒂姆·库克传 [美] 利恩德·卡尼（Leander Kahney） 9787521706468     准时生产的理念在美国通常被称作“精益生产”[18]，最初是为了有效满足客户的需求，同时避免生产过剩。20 世纪六七十年代，在丰田的带动下，这种生产理念在日本普及开来。自动化和准时生产是丰田整个生产系统的两大支柱，这种方式不仅提高了生产效率，也提高了投资回报率。
 库克上的道德课让他开始用不同于行业内大多数人的思考方式进行思考，他从中学到的一个道理就是：将你发现的事物留下，并让它们比被发现时更好，从保护环境到尊重雇员，方方面面。这一信条支撑起了库克的信念，并成为这位苹果 CEO 身上一个无法磨灭的印记。
  </description>
    </item>
    
    <item>
      <title>爱你就像爱生命</title>
      <link>/reading/love_you_as_loving_lives/</link>
      <pubDate>Fri, 21 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>/reading/love_you_as_loving_lives/</guid>
      <description>Name Author ISBN     爱你就像爱生命 王小波、李银河 -     要对人和社会发一点议论就这么费劲，要是先入为主的决定了什么应该赞美，什么应该贬低就容易了，这就是写一流东西的难处。
 有人说当孩子的时候最幸福，其实远非如此。如果说人在童年可以决定自己生命的前途，那么就是当孩子的时候最幸福，其实有一种我们不能左右的力量参加进来决定我们的命运，也就是说，我们被天真欺骗了。
 还有一次规模宏大的把肉麻当有趣，就是六八、六九年闹林彪的时候。
 肉麻是什么呢？肉麻就是人们不得不接受降低人格行为时的感觉
 我有点担心你锋芒太外露。这年头上战场要有点策略，打得赢就打，打不赢就装哑巴。
 大略是现代科学的发达占用了很多的剩余精力，所以现在只能有很低等的文学，这是说西方世界。
 总之，人们应当为自己的剩余精力建设美好的精神生活，这是物质所代替不了的。
 我又在想，什么是文学的基本问题。今天下午三点四十五分我的答案是：人可以拥有什么样的生活。
 中国人真是可怕！有很多很多中国人活在世上什么也不干，只是在周围逡巡，发现了什么就一拥而上。比方说，刘心武写了《班主任》，写得不坏，说了一声：“生活不仅如此！”就有无数的人拥了上去，连声说：“太对太对！您真了不起！您是班主任吧？啧啧，这年头孩子是太坏。”肉麻得叫人毛骨悚然。我觉得这一切真是糟透了。
 还有我。我是爱你的，看见就爱上了。我爱你爱到不自私的地步。就像一个人手里一只鸽子飞走了，他从心里祝福那鸽子的飞翔。你也飞吧。我会难过，也会高兴，到底会怎么样我也不知道。
 我会不爱你吗？不爱你？不会。爱你就像爱生命。算了。不胡扯。
 你想知道我对你的爱情是什么吗？就是从心底里喜欢你，觉得你的一举一动都很亲切，不高兴你比喜欢我更喜欢别人。你要是喜欢了別人我会哭，但是还是喜欢你。你肯用这样的爱情回报我吗？就是你高兴我也高兴，你难过时我来安慰你，还有别爱別人！可惜的是你觉得我长得难看。这怎么办？我来见你时应当怎样化妆？你说吧。
 萧伯纳的名言：“真正的婚姻全是在天上缔结的。”这句话是一个不到二十岁的女孩子爱上一个八十岁以上的萧非特船长时说的。
 我把我整个的灵魂都给你，连同它的怪癖，耍小脾气，忽明忽暗，一千八百种坏毛病。它真讨厌，只有一点好，爱你。
 就是，人是轻易不能知道自己的，因为人的感官全是向外的，比方说人能看见別人，却不能看见自己；人可以对別人有最细微的感觉，对自己就迟钝得多。
 所以我永远不会想把別人的灵魂据为己有。我只希望我们的灵魂可以互通，像一个两倍大的共同体，你知道吗，孤独的灵魂多么寂寞啊，人又有多少弱点啊（这是使自己哭泣的弱点）。
 本着这些信念，我很希望你绝对自由，我希望你的灵魂高飞。
 要是到那时我变了主意，那就是我变坏了，你就丢开我好啦。
 我不喜欢安分过什么“日子”，也不喜欢死气白赖地搅在一起。至于结婚不结婚之类的事情我都不爱去想。世俗所谓必不可少的东西我是一件也不要的。还有那个“爱”、“欠情”之类，似乎无关紧要。只希望你和我好，互不猜忌，也互不称誉，安如平日，你和我说话像对自己说话一样，我和你说话也像对自己说话一样。说吧，和我好吗？
 你知道我这个人越讨厌什么就非把什么弄明白不可。如果我讨厌什么而不把它弄清楚，我就不明白自己为什么不喜欢它，也就不能明确地憎恨它。
 我有好多坏处。可是你知道吗？我是一只骆驼，我说过的话我是不会反悔的，你大概发现我特別迟钝，又很不会说话，可我是忠诚的啊。
 你知道我在世界上最珍视的东西吗？那就是我自己的性格，也就是我自己思想的自由。在
 我去山里你生气吗？你要是不高兴我立刻就回来。
 你呀，你准是不相信我是个好人，以为我会嘲笑你。我真的是个好人，我对好多人怀有最深的感情，尤其是对你。我很想为別人做好事，尤其是对你。我真想把我能做出的一切好事全献给你呢。
 现代作家们对別人永远不及对自己的八分之一关心。我因为这个恨他们，他们写自己的满腹委屈，写自己的无所事事，这怎么可以呢？人不能不爱别人啊。
 总之，空论是非很可笑，不论是非有点冥顽不灵（这句话说得很混，你姑且容之），最正确的就是你。
 你生了气就哭，我一看见你哭就目瞪口呆，就像一个小孩子做了坏事在未受责备之前目瞪口呆一样，所以什么事你先別哭，先来责备我，好吗？</description>
    </item>
    
  </channel>
</rss>