<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>FE on kingcos</title>
    <link>https://kingcos.me/tags/fe/</link>
    <description>Recent content in FE on kingcos</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Thu, 02 Feb 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://kingcos.me/tags/fe/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>从 npm 说开去...（草稿）</title>
      <link>https://kingcos.me/posts/2023/from_npm_to_future/</link>
      <pubDate>Thu, 02 Feb 2023 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/2023/from_npm_to_future/</guid>
      <description>概念摸底 Node.js 根据维基百科： Node.js is a cross-platform, open-source server environment that can run on Windows, Linux, Unix, macOS, and more. Node.js is a back-end JavaScript runtime environment, runs on the V8 JavaScript Engine, and executes JavaScript code outside a web browser. Node.js 是一个跨平台、开源的服务器环境，可以运行在 Windows、Linux、Unix、macOS 以及更多</description>
    </item>
    
    <item>
      <title>深入 Vue（三） —— Vue 中的 el 是如何被挂载的？</title>
      <link>https://kingcos.me/posts/2023/dive_in_vue_03/</link>
      <pubDate>Wed, 24 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/2023/dive_in_vue_03/</guid>
      <description>Release Notes ↕ Date Notes 2023-02-22 首次提交 开始 Watcher 的具体功能类似 miniVue 实现中的 Watcher，负责依赖收集与通知。这里我们暂时略过 Watcher 的源码分析，先对 _render 与 _update 一探究竟： function lifecycleMixin(Vue) { Vue.prototype._update = function (vnode, hydrating) { var vm = this; var prevEl = vm.$el; var prevVnode = vm._vnode; var restoreActiveInstance = setActiveInstance(vm); vm._vnode = vnode; // Vue.prototype.__patch__ is injected</description>
    </item>
    
    <item>
      <title>深入 Vue（二）—— Vue 2 的运行时与编译器</title>
      <link>https://kingcos.me/posts/2023/dive_in_vue_02/</link>
      <pubDate>Mon, 22 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/2023/dive_in_vue_02/</guid>
      <description>Release Notes ↕ Date Notes 2023-02-22 首次提交 前言 在深入 Vue 源码前，我们再尝试弄清楚一些模糊的概念。在早期使用 Vue CLI 创建 Vue 2 项目时，会有以下选项： ➜ demo vue init webpack my-project ? Project name my-project ? Project description A Vue.js project ? Author kingcos &amp;lt;2821836721v@gmail.com&amp;gt; ? Vue build (Use arrow keys) ❯ Runtime + Compiler: recommended for most users Runtime-only: about 6KB lighter min+gzip, but templates (or</description>
    </item>
    
    <item>
      <title>深入 Vue（一）—— 从学习 miniVue 2.x 实现开始</title>
      <link>https://kingcos.me/posts/2023/dive_in_vue_01/</link>
      <pubDate>Sun, 21 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/2023/dive_in_vue_01/</guid>
      <description>Release Notes ↕ Date Notes 2023-02-21 首次提交 前言 Vue 是我们常用的 JavaScript 框架，然而仅仅作为使用者总归是有些肤浅。于是，从今天开始，我要开始深入研究 Vue 原理，通过源码窥探其内部机制。 第一篇文章我们将从一个小型的 Vue 实现着手。注意，本文的主</description>
    </item>
    
  </channel>
</rss>
