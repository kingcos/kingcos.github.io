<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Tips on kingcos</title>
    <link>https://kingcos.me/tags/tips/</link>
    <description>Recent content in Tips on kingcos</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Wed, 16 Jun 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://kingcos.me/tags/tips/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>iOS 自动化测试之 WDA &amp; Appium</title>
      <link>https://kingcos.me/posts/2019/ios_test_automation/</link>
      <pubDate>Wed, 16 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/2019/ios_test_automation/</guid>
      <description>Release Notes ↕ Date Notes 2019-09-19 首次提交 2021-06-16 丰富内容，增加「踩坑」一节 -- WebDriverAgent 为了能够非接触地远程控制与测试 iOS app，Facebook 基于 XCTest 框架开发了 WebDriverAgent（简称 WDA），但由于其内部正在转向使用 IDB（</description>
    </item>
    
    <item>
      <title>将 Obj-C 代码翻译为 C/C&#43;&#43; 代码</title>
      <link>https://kingcos.me/posts/2019/obj-c_to_c&#43;&#43;/</link>
      <pubDate>Sat, 30 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/2019/obj-c_to_c&#43;&#43;/</guid>
      <description>Date Notes 2019-05-17 首次提交 2019-06-15 增加常用参数列表 2019-11-30 细节补充 Solution ➜ ~ clang --version Apple LLVM version 10.0.0 (clang-1000.11.45.5) Target: x86_64-apple-darwin18.2.0 Thread model: posix InstalledDir: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin Xcode 中，C/C++/Obj-C/C++ 的编译器是 clang，其通过 -rewrite-objc 参数可以将 Obj-C 代码翻译为 C++ 代码，即 clang -rewrite-objc main.m -o main.cpp；</description>
    </item>
    
    <item>
      <title>与 Visual Studio Code 共舞</title>
      <link>https://kingcos.me/posts/2019/coding_with_vs_code/</link>
      <pubDate>Sat, 12 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/2019/coding_with_vs_code/</guid>
      <description>Date Notes 2019-08-30 涵盖 Debug Go &amp;amp; Ruby 配置、设置、插件 2019-11-12 增加 Debug CocoaPods &amp;amp; 插件 Preface VS Code（全称 Visual Studio Code），是微软推出的一款插件化编辑器。比 IDE 轻量，又比终端更容易上手，本文将罗列一些我在使用的设置、配置、插件等，也欢迎大家建</description>
    </item>
    
    <item>
      <title>App Store 面面观</title>
      <link>https://kingcos.me/posts/2019/app_store/</link>
      <pubDate>Wed, 28 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/2019/app_store/</guid>
      <description>Preface 一款 app 从开发者手里到最终交付到用户桌面的整个过程中，编写代码只是其中小小的一环，我们需要搭建相应的开发环境、分发完整产物进行测试、并最终将其配以合适的宣传文案以供用户享用。本文将叙述作为一名一线 iOS 开</description>
    </item>
    
    <item>
      <title>Swift/Obj-C 混编项目升级 Swift 5.0 踩坑</title>
      <link>https://kingcos.me/posts/2019/swift_4_to_5/</link>
      <pubDate>Wed, 08 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/2019/swift_4_to_5/</guid>
      <description>Date Note 2019-05-08 Swift 4.2 -&amp;gt; 5.0 2019-07-08 完善内容 Preface 在 ABI 稳定前，每次 Swift 升级都是一个比较「痛苦」的体验。这次笔者花费约总共一天时间将 Swift/Obj-C 混编项目升级到 Swift 5.0，其中还是有一些踩坑经验值得分享的。 Xcode 为了适配 Swift 5.0，首先需要安装 Xcode 1</description>
    </item>
    
    <item>
      <title>Obj-C 中的重载与重写</title>
      <link>https://kingcos.me/posts/2019/override_and_overload_in_obj-c/</link>
      <pubDate>Wed, 20 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/2019/override_and_overload_in_obj-c/</guid>
      <description>Date Platform 2019-03-20 macOS 10.14.2 Preface 重载（Overload）和重写（Override）是面向对象语言中十分基本的两个概念，本文将谈谈 Obj-C 中的重载与重写。 重载 In some programming languages, function overloading or method overloading is the ability to create multiple functions of the same name with different implementations. Calls to an overloaded function will run a specific implementation of that</description>
    </item>
    
    <item>
      <title>Objective-C 与 Swift 桥接中的坑</title>
      <link>https://kingcos.me/posts/2019/obj-c_swift_bridge_tips/</link>
      <pubDate>Thu, 17 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/2019/obj-c_swift_bridge_tips/</guid>
      <description>Date Notes 2019-01-17 添加「Optional 与 Nullability」 添加「NSNotificationName 与 Notification.Name」 Preface Objective-C 与 Swift 的混编是全面转向 Swift 中的必经之路，本文即是这一过程中的踩坑「</description>
    </item>
    
    <item>
      <title>使用 usbmuxd 连接 iPhone</title>
      <link>https://kingcos.me/posts/2018/usbmuxd/</link>
      <pubDate>Sat, 08 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/2018/usbmuxd/</guid>
      <description>macOS iOS libimobiledevice/usbmuxd 10.13.6 9.0.1 (Jailbroken) v1.0.8 What usbmuxd 全称「USB Multiplexing Daemon」，即 USB 多路传输驻留程序。当 Mac/PC 与 iPhone 之间使用 USB 数据线连接时，iTunes 与 iPhone 间的通信交流便是通过 usbmuxd 服务。usbmuxd 通过给定的端口号和 localhost 建立 TCP 连接。 在 Mac 端，</description>
    </item>
    
    <item>
      <title>Xcode 10 beta 趟坑</title>
      <link>https://kingcos.me/posts/2018/xcode_10_beta/</link>
      <pubDate>Wed, 25 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/2018/xcode_10_beta/</guid>
      <description>Xcode macOS 10 beta 2 10.14 beta 2 $(TeamIdentifierPrefix) Xcode 10 已知 Bug，无法自动替换。 Workaround 可以手动将 entitlements 文件的 Pass Type ID 值设置为 mobileversion 文件中com.apple.developer.pass-type-identifiers 对应值。 libstdc++ Xcode 10 取消了内置支持</description>
    </item>
    
    <item>
      <title>在 macOS 上进行直播推流</title>
      <link>https://kingcos.me/posts/2018/livestreaming_on_macos/</link>
      <pubDate>Sun, 22 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/2018/livestreaming_on_macos/</guid>
      <description>Date Platform Software 2018.07.22 macOS 10.14 beta 4 OBS Studio, Soundflower 2019.03.30 macOS 10.14.4 - 由于更换了电脑，上次好不容易折腾的配置也都无从参考，这次尽力把整个配置过程，以及音频输入输出的部分完善。直播推流使用了 OBS Studio，直播平台为 Bilibili。 欢迎来围</description>
    </item>
    
    <item>
      <title>将树莓派作为 AirPlay 音频服务器</title>
      <link>https://kingcos.me/posts/2018/airplay_on_pi/</link>
      <pubDate>Sun, 22 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/2018/airplay_on_pi/</guid>
      <description>Raspberry Pi Platform juhovh/shairplay 3 B Raspbian 4.14 765148f98f343b3b9911cc05504ac276cfc44c26 Info 树莓派是个很容易吃灰的设备，配置太低，又弃之可惜。何不作为 AirPlay 来解放你的有线音箱呢？ Solution SSH 或直接在树莓派的终端中运行以下命令，关于 SSH、VNC、替换源等操作请自行搜索。 Basic setup 安装依赖 sudo</description>
    </item>
    
    <item>
      <title>iOS 开发问题解决集锦</title>
      <link>https://kingcos.me/posts/2018/ios_dev_issue_list/</link>
      <pubDate>Tue, 10 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/2018/ios_dev_issue_list/</guid>
      <description>Unable to boot device in current state: Creating Xcode: 9.4.1 macOS: 10.13 在使用模拟器或者 xcodebuild test 时可能会出现此问题。 Solution 使用 xcrun simctl list 命令列出所有模拟器机型，用 xcrun simctl erase UDID 还原相应的设备，重试即可。 下面是一个 Python 3 脚本，可以使用 python erase_simulators.py -d &#39;DEVICE_TYPE&#39; 来直接还原相应设备类型的所有</description>
    </item>
    
    <item>
      <title>Zen of Git</title>
      <link>https://kingcos.me/posts/draft/zen_of_git/</link>
      <pubDate>Wed, 13 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/draft/zen_of_git/</guid>
      <description>Preface 在现代软件开发的团队协作中，版本控制系统（Version Control System）必不可少，而 Git 已成为绝大多数的团队首选。本文将简单谈谈 Git 相关的工作流、工具链等，以及背后的思考、权衡，当然对于不同的团队，其选</description>
    </item>
    
    <item>
      <title>Supervisor 的安装与基本使用</title>
      <link>https://kingcos.me/posts/2018/supervisor/</link>
      <pubDate>Sun, 06 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/2018/supervisor/</guid>
      <description>Platform Supervisor macOS 10.13.4 3.3.4 Raspbian 4.14 3.3.1 Info Supervisor 是 Linux/UNIX 下的一个由 Python 编写的进程管理工具，可以很方便的用来启动、重启、关闭进程。 Solution Installation macOS 使用 HomeBrew 安装 brew install supervisor Raspbian (Linux) sudo apt-get install supervisor Usage 安装完成后，可以在查看该默认配置，但并非所有配置项均必须定义，可根据自</description>
    </item>
    
    <item>
      <title>使用 Homebrew 安装 Jenkins</title>
      <link>https://kingcos.me/posts/2018/jenkins_by_homebrew/</link>
      <pubDate>Sun, 06 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/2018/jenkins_by_homebrew/</guid>
      <description>Platform Notes macOS 10.13.4 Jenkins 2.114 &amp;amp; Java 8 Solution 安装 Homebrew /usr/bin/ruby -e &amp;#34;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&amp;#34; 安装 Jenkins brew install jenkins 运行 Jenkins # 当前窗口启动（关闭窗口则关闭 Jenkins） # $JENKINS_VERSION_CODE 为版本号，$PORT 为 Jenkins Web 页面端口号 # java -jar /usr/local/Cellar/jenkins/$JENKINS_VERSION_CODE/libexec/jenkins.war --httpPort=$PORT java -jar /usr/local/Cellar/jenkins/$JENKINS_VERSION_CODE/libexec/jenkins.war --httpPort=8080 # 后台启动（关闭窗口无影响） # $OUTPUT_FILENAME 为终端输出</description>
    </item>
    
    <item>
      <title>使用 Homebrew 安装 MySQL</title>
      <link>https://kingcos.me/posts/2018/mysql_by_homebrew/</link>
      <pubDate>Sun, 06 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/2018/mysql_by_homebrew/</guid>
      <description>Platform Notes macOS 10.13.4 MySQL 5.7.21 Solution 安装 Homebrew /usr/bin/ruby -e &amp;#34;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&amp;#34; 安装 MySQL（注意观察可能有错误信息，比如 brew link 失败，可能要先在相应文件夹下开启「写」权限后再手动尝试） brew install mysql 开启 MySQL 服务 # 现在启动，并加入自启动 brew services start mysql # 后台启动 mysql.server start 连接</description>
    </item>
    
    <item>
      <title>简单管理多版本 JDK</title>
      <link>https://kingcos.me/posts/2018/jdk_multiple_versions/</link>
      <pubDate>Sun, 06 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/2018/jdk_multiple_versions/</guid>
      <description>Platform Notes macOS 10.13.4 JDK 8 &amp;amp; 9 Solution 安装 JDK 8 &amp;amp; 9（其他版本同理） vim ~/.zsh_rc（这里使用的是 BashShell，其他 Shell 自行替换） 文末追加： # Java export JAVA_8_HOME=$(/usr/libexec/java_home -v1.8) export JAVA_9_HOME=$(/usr/libexec/java_home -v9) # Default for Java 8 export JAVA_HOME=$JAVA_8_HOME alias java9=&amp;#39;export JAVA_HOME=$JAVA_9_HOME&amp;#39; alias java8=&amp;#39;export JAVA_HOME=$JAVA_8_HOME&amp;#39; 切换版本：java8 / java9 检查版本</description>
    </item>
    
  </channel>
</rss>
