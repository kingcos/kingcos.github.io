<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>SwiftUI on kingcos</title>
    <link>https://kingcos.me/tags/swiftui/</link>
    <description>Recent content in SwiftUI on kingcos</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sat, 02 Jul 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://kingcos.me/tags/swiftui/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Combine 基础</title>
      <link>https://kingcos.me/posts/2022/swift_combine_basics/</link>
      <pubDate>Sat, 02 Jul 2022 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/2022/swift_combine_basics/</guid>
      <description>Release Notes ↕ Date Notes 2022-06-29 首次提交 Preface Combine 是 Apple 为响应式编程推出的全新框架。 概览 Combine 中最基本的三个元素是： Pulisher（发布者）-&amp;gt; Operator（操作符）-&amp;gt; Subscriber（订阅者） 即发布事件、操</description>
    </item>
    
    <item>
      <title>Swift 中的 ObservableObject</title>
      <link>https://kingcos.me/posts/2022/swift_observable_object/</link>
      <pubDate>Wed, 29 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/2022/swift_observable_object/</guid>
      <description>Release Notes ↕ Date Notes 2022-06-29 首次提交 Preface ObservableObject 相比 @State 更自由一些。仅 class 类型可以遵守该协议。视图使用时可以声明为 @ObservedObject，也可使用 @EnvironmentObject 注入。 实现 先来看下 ObservableObject 的部分代码： /// A type of object with a publisher that emits before the object has changed. /// 一种带有</description>
    </item>
    
    <item>
      <title>Swift 中的 propertyWrapper</title>
      <link>https://kingcos.me/posts/2022/swift_property_wrapper/</link>
      <pubDate>Tue, 28 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/2022/swift_property_wrapper/</guid>
      <description>Release Notes ↕ Date Notes 2022-06-28 首次提交 Preface SwiftUI 中，我们经常可以见到 @State、@Binding 等类似 @ 开头的代码，其官方名称为 Property Wrapper —— 属性包装器。 @State 在 Xcode 中，我们可以进入到 @State 的定义中，即： /// A property wrapper type that can read and write a value managed by SwiftUI. /// 属</description>
    </item>
    
  </channel>
</rss>
