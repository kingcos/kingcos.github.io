<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>kingcos</title>
    <link>https://kingcos.me/</link>
    <description>Recent content on kingcos</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Thu, 02 Feb 2023 00:00:00 +0000</lastBuildDate><atom:link href="https://kingcos.me/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>从 npm 说开去...（草稿）</title>
      <link>https://kingcos.me/posts/2023/from_npm_to_future/</link>
      <pubDate>Thu, 02 Feb 2023 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/2023/from_npm_to_future/</guid>
      <description>概念摸底 Node.js 根据维基百科： Node.js is a cross-platform, open-source server environment that can run on Windows, Linux, Unix, macOS, and more. Node.js is a back-end JavaScript runtime environment, runs on the V8 JavaScript Engine, and executes JavaScript code outside a web browser. Node.js 是一个跨平台、开源的服务器环境，可以运行在 Windows、Linux、Unix、macOS 以及更多</description>
    </item>
    
    <item>
      <title>半途而废的 2022</title>
      <link>https://kingcos.me/posts/2022/summary_of_2022/</link>
      <pubDate>Fri, 23 Dec 2022 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/2022/summary_of_2022/</guid>
      <description>本篇文章首发于我的公众号： 关于生活 由于众所周知的原因，2022 年的封控比以往更加严格，也使得生活充满了更多的不确定性。 记录与分享 买买买 iPad mini 6 去年（2021）年初我购入了 iPad Pro 2020 套装（Apple Pencil + Magic Ke</description>
    </item>
    
    <item>
      <title>日拱一卒 - 推进、跳跃、往复</title>
      <link>https://kingcos.me/posts/gzh/220821/</link>
      <pubDate>Sun, 21 Aug 2022 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/gzh/220821/</guid>
      <description>本篇文章首发自我的公众号： Life 最近借了图书馆的纸质书，这种手握着纸张的质感还真让人怀念。 「Hey, Siri. 播放《卡比巴拉的海》」： ... 你有一只步履轻盈的猫 ... ☁️： 规整的楼台： 落日余晖： 那天下午的火烧云： 蓝天白云</description>
    </item>
    
    <item>
      <title>日拱一卒 - 夏去秋来</title>
      <link>https://kingcos.me/posts/gzh/220812/</link>
      <pubDate>Fri, 12 Aug 2022 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/gzh/220812/</guid>
      <description>本篇文章首发自我的公众号： Life 许久未更，夏日已然过去，入秋之后的天气总算容易忍受了些。 最终，我还是入手了一颗原厂 Fujifilm XC50-230mm 的长焦镜头，取代那支古老的需要转接头的手动对焦镜头。下面的大多数相片都来自这支镜头。 野</description>
    </item>
    
    <item>
      <title>日拱一卒 - 追逐夕阳</title>
      <link>https://kingcos.me/posts/gzh/220723/</link>
      <pubDate>Sat, 23 Jul 2022 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/gzh/220723/</guid>
      <description>本篇文章首发自我的公众号： Life 🎵 爱的飞行日记（Live）- 周杰伦、杨瑞代 Life 朋友刚刚提醒我好久没更新了&amp;hellip; emmm，其实中间有几次想要更新，但迫于相片没那么多，就犯懒啦。 ☁️： 夕阳： 黄与蓝： 一</description>
    </item>
    
    <item>
      <title>开启第一个 30 天挑战 —— SwiftUI</title>
      <link>https://kingcos.me/posts/gzh/30dc_1/</link>
      <pubDate>Sun, 03 Jul 2022 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/gzh/30dc_1/</guid>
      <description>本篇文章首发自我的公众号： 是的，没错，我又想开一个新坑了。 前段时间，我开始在备忘录里分析和记录自己的弱点，并尝试冷静地思考如何改善，亦或扬长避短。坦白说，其中一个较为严重的弱点是：不坚持。我有一些好的</description>
    </item>
    
    <item>
      <title>日拱一卒 - 夏至雨涟涟</title>
      <link>https://kingcos.me/posts/gzh/220703/</link>
      <pubDate>Sun, 03 Jul 2022 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/gzh/220703/</guid>
      <description>本篇文章首发自我的公众号： Life （也推荐五月天的版本&amp;hellip; 下过雨的夏天傍晚 我都会期待 唱歌的蝉，嘿 把星星都吵醒 月光晒了很凉快 ... ☁️ 中透出的 ☀️： 「抽象派」： 落花： 绣球（识花君小程序说它叫「无尽夏（</description>
    </item>
    
    <item>
      <title>Combine 基础</title>
      <link>https://kingcos.me/posts/2022/swift_combine_basics/</link>
      <pubDate>Sat, 02 Jul 2022 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/2022/swift_combine_basics/</guid>
      <description>Release Notes ↕ Date Notes 2022-06-29 首次提交 Preface Combine 是 Apple 为响应式编程推出的全新框架。 概览 Combine 中最基本的三个元素是： Pulisher（发布者）-&amp;gt; Operator（操作符）-&amp;gt; Subscriber（订阅者） 即发布事件、操</description>
    </item>
    
    <item>
      <title>Swift 中的 ObservableObject</title>
      <link>https://kingcos.me/posts/2022/swift_observable_object/</link>
      <pubDate>Wed, 29 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/2022/swift_observable_object/</guid>
      <description>Release Notes ↕ Date Notes 2022-06-29 首次提交 Preface ObservableObject 相比 @State 更自由一些。仅 class 类型可以遵守该协议。视图使用时可以声明为 @ObservedObject，也可使用 @EnvironmentObject 注入。 实现 先来看下 ObservableObject 的部分代码： /// A type of object with a publisher that emits before the object has changed. /// 一种带有</description>
    </item>
    
    <item>
      <title>Swift 中的 propertyWrapper</title>
      <link>https://kingcos.me/posts/2022/swift_property_wrapper/</link>
      <pubDate>Tue, 28 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/2022/swift_property_wrapper/</guid>
      <description>Release Notes ↕ Date Notes 2022-06-28 首次提交 Preface SwiftUI 中，我们经常可以见到 @State、@Binding 等类似 @ 开头的代码，其官方名称为 Property Wrapper —— 属性包装器。 @State 在 Xcode 中，我们可以进入到 @State 的定义中，即： /// A property wrapper type that can read and write a value managed by SwiftUI. /// 属</description>
    </item>
    
    <item>
      <title>纳瓦尔宝典</title>
      <link>https://kingcos.me/reading/the_almanack_of_naval_ravikant/</link>
      <pubDate>Thu, 16 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/reading/the_almanack_of_naval_ravikant/</guid>
      <description>Name Author ISBN 纳瓦尔宝典 埃里克·乔根森 9787521741124 我们都相信自由和幸福并不来自外在物质的满足，而是来自我们自身所做出的选择。 将追逐增长的天际线，调低到了控制风险的警戒线。 追求财富，而不是金钱或地位。财富是指在你睡觉时仍</description>
    </item>
    
    <item>
      <title>日拱一卒 - 回归往常</title>
      <link>https://kingcos.me/posts/gzh/220612/</link>
      <pubDate>Sun, 12 Jun 2022 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/gzh/220612/</guid>
      <description>本篇文章首发自我的公众号： Life 昨日（6.11）🌧️，先想到了某人的「下雨」，又想到了「天黑黑」—— 但都没有版权。​所以： 回公司上班的第一天，就遇到了夏日成片的云 ☁️： （似乎以前也有一张类似的视角：） 以及</description>
    </item>
    
    <item>
      <title>分享我所喜爱的内容创作者们</title>
      <link>https://kingcos.me/posts/2022/my_like_1/</link>
      <pubDate>Sat, 07 May 2022 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/2022/my_like_1/</guid>
      <description>Release Notes ↕ Date Notes 2022-05-07 首次提交 本篇文章首发自我的公众号： 早在很多年前，我就曾想过分享一些自己所关注的播客或是什么。只是有时苦于无人分享，亦或是有些小「私」心。趁着居家不太便于外出拍摄，最近也计划整理和分享一些我</description>
    </item>
    
    <item>
      <title>浅学 git rebase</title>
      <link>https://kingcos.me/posts/2022/git_rebase/</link>
      <pubDate>Fri, 15 Apr 2022 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/2022/git_rebase/</guid>
      <description>Release Notes ↕ Date Notes 2022-04-16 首次提交 🤔 「什么是 git？什么又是 rebase？我这是关注了个什么？？？」 不好意思啦～非技术的同学可能会有点懵，甚至有点想~~取关~~...不过等等！​这只是一篇技术类内容，取关就见外啦，</description>
    </item>
    
    <item>
      <title>计算机网络实例（三）— ping 的过程</title>
      <link>https://kingcos.me/posts/2022/network_demos_3/</link>
      <pubDate>Sun, 13 Mar 2022 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/2022/network_demos_3/</guid>
      <description>Release Notes ↕ Date Notes 2022-03-13 首次提交 ARP &amp;amp; ICMP 这里我们尝试 ping 一台位于同一个 Wi-Fi 局域网下的 iPhone 的 IP。在开始 ping 之前，首先需要打开 Wireshark（m1 芯片的 Mac 也可正常使用 Intel 版本的 Wireshark）并开启抓包，并在命令行中查</description>
    </item>
    
    <item>
      <title>计算机网络实例（二）— 子网划分 &amp; 合并网段</title>
      <link>https://kingcos.me/posts/2022/network_demos_2/</link>
      <pubDate>Tue, 08 Mar 2022 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/2022/network_demos_2/</guid>
      <description>Release Notes ↕ Date Notes 2022-03-08 首次提交 子网划分 目的：避免浪费 IP 地址资源。 原理：借用主机位作为子网位，划分出多个子网。 等长子网划分 等长子网划分（Fixed Length Subnet Mask）：每个子网的可用 IP 地址数量相同。 等长 · C 类一分为二 将</description>
    </item>
    
    <item>
      <title>计算机网络实例（一）— 在同一网段与不同网段中传递数据</title>
      <link>https://kingcos.me/posts/2022/network_demos_1/</link>
      <pubDate>Sun, 06 Mar 2022 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/2022/network_demos_1/</guid>
      <description>Release Notes ↕ Date Notes 2022-03-06 首次提交 网络拓扑结构： 同一网段 发送方：192.168.1.10（PC4） 接收方：192.168.1.11（PC5） 初始状态 PC4 ARP 缓存： C:\&amp;gt;arp -a No ARP Entries Found 交换机 MAC 地址表： Switch#show mac-address-table Mac Address Table ------------------------------------------- Vlan Mac Address Type Ports ---- ----------- --------</description>
    </item>
    
    <item>
      <title>挥别 2021，展望 2022</title>
      <link>https://kingcos.me/posts/2021/summary_of_2021/</link>
      <pubDate>Sun, 02 Jan 2022 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/2021/summary_of_2021/</guid>
      <description>本篇文章首发于 mirror.xyz，而后发布于我的公众号： 提笔这篇年终总结时，距离 2022 年的钟声只剩下几个时辰。下午，朋友偶然问起「用一句话总结今年想说什么？」，我没想太多，用了两个词答道：「如愿以偿 知足</description>
    </item>
    
    <item>
      <title>Insight - 今天起，停止记账</title>
      <link>https://kingcos.me/posts/2021/think_of_accounting/</link>
      <pubDate>Sat, 30 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/2021/think_of_accounting/</guid>
      <description>Release Notes ↕ Date Notes 2021-10-31 首次提交并发布于公众号 本篇文章首发自我的公众号： 何谓记账 根据汉语词典的解释，账的意思为「财物出入的记载」，那么记账自然是记录我们的每笔收入与支出。越来越多的年轻人开始有意识地从记账开始，主</description>
    </item>
    
    <item>
      <title>Insight - 读《公募权益类基金投资者盈利洞察报告》</title>
      <link>https://kingcos.me/posts/2021/gmqyljjtzzyldcbg/</link>
      <pubDate>Sat, 23 Oct 2021 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/2021/gmqyljjtzzyldcbg/</guid>
      <description>Release Notes ↕ Date Notes 2021-10-23 首次提交并发布于公众号 本篇文章首发自我的公众号： Info. 名称：公募权益类基金投资者盈利洞察报告 时间：2021-10 主办机构与媒体：景顺长城、富国基金、交银施罗德，中国证券报 标准与定义 在开始之前，</description>
    </item>
    
    <item>
      <title>Insight - 读《苹果：组织结构，皆为创新》</title>
      <link>https://kingcos.me/posts/2021/how_apple_is_organized_innovation/</link>
      <pubDate>Thu, 30 Sep 2021 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/2021/how_apple_is_organized_innovation/</guid>
      <description>Release Notes ↕ Date Notes 2021-09-30 首次提交并发布于公众号 本篇文章首发自我的公众号： 开篇题 「#Insight」 —— 在假期来临之际，我想要为一直想写的这个话题系列开个篇，是的，我又开了个新坑&amp;hellip; 而作为软件工程师天天</description>
    </item>
    
    <item>
      <title>日拱一卒 - 21.08.30</title>
      <link>https://kingcos.me/posts/gzh/210830/</link>
      <pubDate>Wed, 01 Sep 2021 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/gzh/210830/</guid>
      <description>本篇文章首发自我的公众号： Life 除了上次的那首《醉鬼的敬酒曲》，这几天似乎也没再听到什么值得分享的「新」音乐，于是我还是翻了翻之前加入歌单的音乐。这是电影《爱在午夜降临前》中的一首轻音乐： 🎵 The Best Summer of My Life -</description>
    </item>
    
    <item>
      <title>日拱一卒 - 21.08.31</title>
      <link>https://kingcos.me/posts/gzh/210831/</link>
      <pubDate>Wed, 01 Sep 2021 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/gzh/210831/</guid>
      <description>本篇文章首发自我的公众号： Hello, 👋 首先向大家说声抱歉，昨晚的文章再次因为标题被插件覆盖，导致以「未命名文章」为题发出。所以做了删除操作，更正篇放在了本文的下方。而一般来说，我通常会发送到手机预览，也会检查</description>
    </item>
    
    <item>
      <title>日拱一卒 - 21.08.28 &amp; 08.29</title>
      <link>https://kingcos.me/posts/gzh/210829/</link>
      <pubDate>Mon, 30 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/gzh/210829/</guid>
      <description>本篇文章首发自我的公众号： Life 周末的两天过得真是飞快。周六上午整理发布了「#创作分享」系列的第一篇 ——「创作分享 - MappingCoder by wgy6055」，希望这个系列能分享一些好朋友们写的项目、代码等等。晚上又整理发布了</description>
    </item>
    
    <item>
      <title>创作分享 - MappingCoder by wgy6055</title>
      <link>https://kingcos.me/posts/gzh/czfx_1/</link>
      <pubDate>Sat, 28 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/gzh/czfx_1/</guid>
      <description>本篇文章首发自我的公众号： Hello，👋～ 这里是我受好朋友启发而刚刚筹划的新话题 ——「#创作分享」，我计划会在这里分享一些好友们开发的项目，更新频率不固定，只会更新我也试用过且真正优秀的项目，希望你会</description>
    </item>
    
    <item>
      <title>日拱一卒 - 21.08.27</title>
      <link>https://kingcos.me/posts/gzh/210827/</link>
      <pubDate>Sat, 28 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/gzh/210827/</guid>
      <description>本篇文章首发自我的公众号： Life [视频 · 暂略] 今晨，我在微博上刷到了上海彩虹室内合唱团于庆功宴上奏唱的这首《醉鬼的敬酒曲》。正如其官方的介绍，这个版本不同于录音棚版本的精致，却终有了「醉」与「酒」。 敬生命</description>
    </item>
    
    <item>
      <title>日拱一卒 - 21.08.26</title>
      <link>https://kingcos.me/posts/gzh/210826/</link>
      <pubDate>Thu, 26 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/gzh/210826/</guid>
      <description>本篇文章首发自我的公众号： Life 🎵 Not Today - Imagine Dragons 晚上吃饭时才从朋友圈刷到了满屏的彩虹，但很遗憾，我并没有拍到 —— 又是努力上班不分心的打工人呀。 依旧晴朗、刺眼的中午，换个方向拍河流、建筑： 以及一片片厚厚的云 ☁️</description>
    </item>
    
    <item>
      <title>日拱一卒 - 21.08.24 &amp; 08.25</title>
      <link>https://kingcos.me/posts/gzh/210825/</link>
      <pubDate>Wed, 25 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/gzh/210825/</guid>
      <description>本篇文章首发自我的公众号： 👋，晚上好呀～根据我最近的一些数据似乎印证了一个我一直不以为然的事实：即视频比文字、图片的传播更具有感染力与传播力，也就是说人们更愿意看完短短几分钟的视频，而不是阅读文字，且</description>
    </item>
    
    <item>
      <title>日拱一卒 - 21.08.22 &amp; 08.23</title>
      <link>https://kingcos.me/posts/gzh/210823/</link>
      <pubDate>Mon, 23 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/gzh/210823/</guid>
      <description>本篇文章首发自我的公众号： Hello, again 👋 这两天来了许多新朋友，没猜错的话，大概都是因为「绝绝子生成器」而来的。我发自内心地很感谢你，因为这样一个小东西而不远如此距离来关注它的作者。而我也需要说明的是，它的热度</description>
    </item>
    
    <item>
      <title>日拱一卒 - 21.08.18</title>
      <link>https://kingcos.me/posts/gzh/210818/</link>
      <pubDate>Sun, 22 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/gzh/210818/</guid>
      <description>本篇文章首发自我的公众号： Life 🎵 突然好想你 - 五月天 午饭后独自散步，抬头发现银杏已半黄： 回公司路上看到一位环卫老爷爷开着小车穿过，后面的扫帚竖起得很高： 继续翻旧相片。五月下旬，去逛了朝阳公园的北京书市。这</description>
    </item>
    
    <item>
      <title>日拱一卒 - 21.08.19 - 08.21</title>
      <link>https://kingcos.me/posts/gzh/210821/</link>
      <pubDate>Sun, 22 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/gzh/210821/</guid>
      <description>本篇文章首发自我的公众号： Hello，各位新老朋友们 👋 「日拱一卒」是我的公众号中一个近乎日更的系列。我会在此记录一天中看到的、听到的、又或者感受到的有趣或无趣的事情，分享听到的音乐、拍到的照片。感谢关</description>
    </item>
    
    <item>
      <title>绝绝子生成器的从 0 到 30 万</title>
      <link>https://kingcos.me/posts/2021/jjz/</link>
      <pubDate>Sat, 21 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/2021/jjz/</guid>
      <description>在找绝绝子生成器？=&amp;raquo;&amp;raquo; 点我吧 &amp;laquo;&amp;laquo;= 本篇文章首发自我的公众号： 很荣幸，今天在这里多了几十位新朋友，虽然不知道我们是否口味相对，但真的很谢谢你们的关注与喜欢。 昨天，我写的「绝绝子生成</description>
    </item>
    
    <item>
      <title>日拱一卒 - 21.08.17</title>
      <link>https://kingcos.me/posts/gzh/210817/</link>
      <pubDate>Tue, 17 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/gzh/210817/</guid>
      <description>本篇文章首发自我的公众号： Life 雨过天晴： 夏去秋至，早晚的空气中带来了一丝凉意： Research Only 仅作调研。 USCIS：全称 U.S. Citizenship and Immigration Services，即美国公民及移民服务局。 H1B：全称 H-1B visa，即 H-1B 签证，是美国签发</description>
    </item>
    
    <item>
      <title>日拱一卒 - 21.08.16</title>
      <link>https://kingcos.me/posts/gzh/210816/</link>
      <pubDate>Mon, 16 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/gzh/210816/</guid>
      <description>本篇文章首发自我的公众号： 404 Not Found 本文已被微信公众号因违规为由删除，且申诉未通过。本人亦无法查看原文，仅知晓其封面为下图：</description>
    </item>
    
    <item>
      <title>日拱一卒 - 21.08.14 &amp; 08.15</title>
      <link>https://kingcos.me/posts/gzh/210815/</link>
      <pubDate>Sun, 15 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/gzh/210815/</guid>
      <description>本篇文章首发自我的公众号： Life 🎵 Tennessee - Hans Zimmer 今天（8.14）在 B 站看了一位小姐姐使用相机记录上半年的影集，其中有一个评论说得很赞，大致意思是无论她拍得好坏起码她先拿起相机勇敢地去拍了，当然，她拍的确实也很棒</description>
    </item>
    
    <item>
      <title>日拱一卒 - 21.08.13</title>
      <link>https://kingcos.me/posts/gzh/210813/</link>
      <pubDate>Sat, 14 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/gzh/210813/</guid>
      <description>本篇文章首发自我的公众号： Life 今年六月中下旬的一个周末，闲来无事我和同学去了中央美术学院，参观他们的毕业展览。 其中让我最为触动的是这幅画 ——「防护服」。画是平面二维的，而阴影为平面扩展到立体三维，加上我</description>
    </item>
    
    <item>
      <title>日拱一卒 - 21.08.11 &amp; 08.12</title>
      <link>https://kingcos.me/posts/gzh/210812/</link>
      <pubDate>Fri, 13 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/gzh/210812/</guid>
      <description>本篇文章首发自我的公众号： Life 🎵 太阳照常升起 - 久石让 先对点进文章却发现内容被删除的读者说句抱歉，昨晚的文章由于我忘记注意标题，导致带着个「未命名文章」的标题就发出了。尝试挽救未果，还是做了删除的决定，合</description>
    </item>
    
    <item>
      <title>日拱一卒 - 21.08.10</title>
      <link>https://kingcos.me/posts/gzh/210810/</link>
      <pubDate>Wed, 11 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/gzh/210810/</guid>
      <description>本篇文章首发自我的公众号： Life 今日份的跳跳糖麦旋风： 那么跳跳糖为何会「跳」呢？看配料可以得知其中含有二氧化碳： 当口中含着跳跳糖时，表面的糖随着唾液逐渐溶解，里面的小气泡也一个个破掉，产生独特的口感。 ——</description>
    </item>
    
    <item>
      <title>日拱一卒 - 21.08.09</title>
      <link>https://kingcos.me/posts/gzh/210809/</link>
      <pubDate>Tue, 10 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/gzh/210809/</guid>
      <description>本篇文章首发自我的公众号： Life 那天，雨后的一抹彩虹： 繁忙的周一总是不给人喘息的机会，加上恢复健身，更是几乎没有了自己的时间，不过今天还是有所收获。晚上开会时，刚好约到了面向街口交汇处的会议室。马路被大雨</description>
    </item>
    
    <item>
      <title>日拱一卒 - 21.08.07 &amp; 08.08</title>
      <link>https://kingcos.me/posts/gzh/210808/</link>
      <pubDate>Sun, 08 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/gzh/210808/</guid>
      <description>本篇文章首发自我的公众号： Life 如果今天有幸拍到一张好照片，那么我就直接分享它；如果今天没有，那么我就在相册里翻一张之前的好照片分享： 因为 7 号没有看书，而是又开了个新坑 —— 用 TypeScript 写了一个小程序，所以原本是想</description>
    </item>
    
    <item>
      <title>日拱一卒 - 21.08.06</title>
      <link>https://kingcos.me/posts/gzh/210806/</link>
      <pubDate>Sat, 07 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/gzh/210806/</guid>
      <description>本篇文章首发自我的公众号： Life 某日雨后的水滴，滴落在河边的野草上： 也还记得某日刚从公司大楼走出，就被那片火烧云所吸引。不少路人也驻足停步，拿出手机记录下这一刻： 碎碎念 又周末了，周五偷个懒，然而群发时却告</description>
    </item>
    
    <item>
      <title>日拱一卒 - 21.08.05</title>
      <link>https://kingcos.me/posts/gzh/210805/</link>
      <pubDate>Fri, 06 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/gzh/210805/</guid>
      <description>本篇文章首发自我的公众号： Life 今天的云让不少人驻足拍照留念，但怎么拍似乎都拍不出那种被余晖照耀的美丽。 顺便分享一首随机的来自五月天的歌： Code &amp;amp; Notes 可详见《Advanced Swift》笔记一文。 碎碎念 今天在内</description>
    </item>
    
    <item>
      <title>日拱一卒 - 21.08.04</title>
      <link>https://kingcos.me/posts/gzh/210804/</link>
      <pubDate>Thu, 05 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/gzh/210804/</guid>
      <description>本篇文章首发自我的公众号： Hello, again! 昨晚在 995.WLB 群中聊起了自己曾经半途而废的那些事情，而这个公众号也算其中之一。太拘泥于细节、追求「完美主义」的本质却是低效的、虚荣的，甚至让我自己陷入一种「假装」在努力的错觉。</description>
    </item>
    
    <item>
      <title>《Advanced Swift》笔记</title>
      <link>https://kingcos.me/posts/2021/advanced_swift/</link>
      <pubDate>Tue, 03 Aug 2021 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/2021/advanced_swift/</guid>
      <description>Release Notes ↕ Date Notes 2021-08-03 首次提交 介绍 == 为结构相等（需要实现 Equatable 协议），=== 为指针相等或者引用相等： class Foo: Equatable { var bar: Int = 0 static func == (lhs: Foo, rhs: Foo) -&amp;gt; Bool { lhs.bar == rhs.bar } } let f1 = Foo() let f2 = Foo() let falseValue = (f1 === f2) // false let trueValue = (f1 == f2) // true Foundation 框架中的 Data 结构体</description>
    </item>
    
    <item>
      <title>计算机网络核心笔记</title>
      <link>https://kingcos.me/posts/2021/computer_network_notes/</link>
      <pubDate>Thu, 22 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/2021/computer_network_notes/</guid>
      <description>Release Notes ↕ Date Notes 2021-05-22 首次提交 基础知识 ARP 欺骗 TODO. 传输层 ★ .table_div_4 table th:first-of-type { width: 20%; } TCP UDP 连接性 面向连接（需要基于连接） 无连接 可靠性 可靠传输，不丢包 不可靠传输，尽最大努力交付，可能丢包 首部大小 大 小 传输速率 慢 快 资源消耗 大 小 应用场景</description>
    </item>
    
    <item>
      <title>iOS 自动化测试之 WDA &amp; Appium</title>
      <link>https://kingcos.me/posts/2019/ios_test_automation/</link>
      <pubDate>Wed, 16 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/2019/ios_test_automation/</guid>
      <description>Release Notes ↕ Date Notes 2019-09-19 首次提交 2021-06-16 丰富内容，增加「踩坑」一节 -- WebDriverAgent 为了能够非接触地远程控制与测试 iOS app，Facebook 基于 XCTest 框架开发了 WebDriverAgent（简称 WDA），但由于其内部正在转向使用 IDB（</description>
    </item>
    
    <item>
      <title>iOS 多线程技术实践之 @synchronized（四）</title>
      <link>https://kingcos.me/posts/2021/multithreading_techs_in_ios-4/</link>
      <pubDate>Tue, 01 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/2021/multithreading_techs_in_ios-4/</guid>
      <description>Release Notes ↕ Date Notes 2021-06-01 首次提交 objc4-818.2 What 大致流程 为了保护代码的并发执行，我们尝试使用 @synchronized 即同步代码块写一段代码： // SomeClass.m #import &amp;lt;Foundation/Foundation.h&amp;gt; @implementation SomeClass - (void)someFunc { printf(&amp;#34;&amp;gt;&amp;gt;&amp;gt;&amp;gt;&amp;gt;\n&amp;#34;); @synchronized(self) { printf(&amp;#34;Protected code.\n&amp;#34;); } printf(&amp;#34;&amp;lt;&amp;lt;&amp;lt;&amp;lt;&amp;lt;\n&amp;#34;); } @end 接着，我们使用 xcrun -sdk iphoneos clang -arch arm64 -rewrite-objc SomeClass.m -o SomeClass.cpp 命令将以上代码重写为 C++，并找到 someFunc</description>
    </item>
    
    <item>
      <title>Obj-C 中的 DisguisedPtr</title>
      <link>https://kingcos.me/posts/2021/disguised_ptr_in_objc/</link>
      <pubDate>Tue, 01 Jun 2021 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/2021/disguised_ptr_in_objc/</guid>
      <description>Release Notes ↕ Date Notes 2021-06-01 首次提交 objc4-818.2 What 正如 Apple 官方对于 DisguisedPtr&amp;lt;T&amp;gt; 的注释：「acts like pointer type T*（行为类似于指针类型 T*）」，即其本身的作用等同于指针引用对象，而不同之处则在于其将引用对象的内存地址隐藏了。我们可以在 Apple 开源的 objc4-818.2 中</description>
    </item>
    
    <item>
      <title>[译] Swift 编译器性能</title>
      <link>https://kingcos.me/posts/2020/swift_compiler_performance/</link>
      <pubDate>Mon, 24 May 2021 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/2020/swift_compiler_performance/</guid>
      <description>作者 原文链接 版本 apple/swift Swift Compiler Performance b23b335 本文档是一份关于理解、诊断并报告 Swift 编译器编译性能问题的指南。即：编译器编译代码的速度，而非代码运行的速度。 虽然本指南较长，但内容其实相当简单。在很大程度上，性能分析需要耐住性</description>
    </item>
    
    <item>
      <title>Swift 拾遗 - 访问控制</title>
      <link>https://kingcos.me/posts/2016/swift_access_control/</link>
      <pubDate>Mon, 24 May 2021 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/2016/swift_access_control/</guid>
      <description>Release Notes ↕ Date Notes Env 2016-10-20 首次提交 Xcode 8.1 Beta 3 Swift 3.0 2021-05-24 全文重构 Xcode 12.5 Swift 5.4 /* .table_div_1 table th:first-of-type { width: 20%; } .table_div_1 table th:nth-of-type(2) { width: 20%; } .table_div_1 table th:nth-of-type(3) { width: 20%; } */ .table_div_1 table th:nth-of-type(4) { width: 40%; } 限制等级 跨模块*访问 跨文件访问 细节 open 🉑️ 🉑️ 1. 仅可修饰类与类的成员变量 2. 修饰的类可被跨模</description>
    </item>
    
    <item>
      <title>《Effective Objective-C 2.0》笔记</title>
      <link>https://kingcos.me/posts/2019/effective_obj-c_2.0_notes/</link>
      <pubDate>Mon, 24 May 2021 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/2019/effective_obj-c_2.0_notes/</guid>
      <description>Release Notes ↕ Book ISBN Notes Effective Objective-C 2.0 9787111451297 - Date Num. Env 2019-05 1-3 Xcode 10.2.1 2019-06 4 Xcode 10.2.1 2019-07 5-12 Xcode 10.2.1 2019-10 13-20 Xcode 11.1 &amp;amp; 11.2 2019-11 20-52 Xcode 11.1 &amp;amp; 11.2 2021-05-24 - 补充属性特性中的可空性与 direct Preface 《Effective Objective-C 2.0》中文版书名为《编写高质量 iOS 与 OS X 代码的 52 个有效方法》，是类似笔</description>
    </item>
    
    <item>
      <title>谈谈我的家庭保险计划</title>
      <link>https://kingcos.me/posts/2019/insurance_plan/</link>
      <pubDate>Wed, 12 May 2021 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/2019/insurance_plan/</guid>
      <description>Release Notes ↕ Date Notes 2019-05-14 首次提交 2021-05-12 更新至最新 配置 本人 缺失寿险、终身重疾险、意外险 名称 类别 平台 价格 推荐指数 好医保 · 长期医疗 医疗险 支付宝 ¥ 152 / 年 ★★★☆☆ 药神保 · 抗癌计划保障（基础版） 医疗险 微信 ¥ 1 / 月 ★★★★★ - -</description>
    </item>
    
    <item>
      <title>小王子</title>
      <link>https://kingcos.me/reading/the_little_prince/</link>
      <pubDate>Sat, 17 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/reading/the_little_prince/</guid>
      <description>Name Author Translators ISBN 小王子 [法] 安东尼 · 德 · 圣 - 埃克苏佩里（Antoine-Marie-Roger De Saint-Exupery） 外研社编译组 - All grown-ups were once children. 大人们从不自己动脑思考，还总是让人不停地给他们解释，这让孩子</description>
    </item>
    
    <item>
      <title>Swift 拾遗 - Swift Tips</title>
      <link>https://kingcos.me/posts/2020/swift_tips/</link>
      <pubDate>Fri, 16 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/2020/swift_tips/</guid>
      <description>Preface 《Swift 拾遗》是一个关于 Swift 的新文章专辑，这个系列的文章将不会涉及基本语法的层面，而是尝试从底层「拾」起之前所忽视的内容。那么作为起始篇，随着整个系列的进行，其中「遗」漏的基本使用内容将在本文中得</description>
    </item>
    
    <item>
      <title>未雨绸缪，有备无患 —— 我的备货小记</title>
      <link>https://kingcos.me/posts/2022/notes_of_preparations/</link>
      <pubDate>Fri, 09 Apr 2021 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/2022/notes_of_preparations/</guid>
      <description>Release Notes ↕ Date Notes 2022-04-09 首次提交 前言 哈喽，大家好～由于担心本文可能会存在一些潜在的负面影响，我想把一些话放在文首的「前言」部分，请您务必先认真阅读本段内容后再看下文： 笔者没有任何直接或间接目的来引起大家的恐慌和焦</description>
    </item>
    
    <item>
      <title>Insight - 谈谈 PMF、STP 与 4P 理论（三）</title>
      <link>https://kingcos.me/posts/2022/pmf_stp_4p/</link>
      <pubDate>Fri, 19 Feb 2021 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/2022/pmf_stp_4p/</guid>
      <description>Release Notes ↕ Date Notes 2022-02-19 首次提交 PMF PMF（Product Market Fit）：为产品匹配一个市场（先有产品后有市场）；或为市场匹配一个产品（老王认为后者才是正确的）。 很多早期公司成败的点就在于是否找到了 PMF。错误的行为有</description>
    </item>
    
    <item>
      <title>沉默的大多数</title>
      <link>https://kingcos.me/reading/the_silent_majority/</link>
      <pubDate>Tue, 05 Jan 2021 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/reading/the_silent_majority/</guid>
      <description>Name Author ISBN 沉默的大多数 王小波 - 这使我不敢与他争辩——再争辩就要涉入某些话语的范畴，而这些话语，就是阴阳两界的分界线。 总而言之，从小我对讲出来的话就不大相信，越是声色俱厉，嗓门高亢，我越是不信。这种怀疑态度</description>
    </item>
    
    <item>
      <title>Insight - 谈谈战略（二）</title>
      <link>https://kingcos.me/posts/2021/think_of_strategy/</link>
      <pubDate>Sat, 14 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/2021/think_of_strategy/</guid>
      <description>Release Notes ↕ Date Notes 2021-11-14 首次提交 定义 战略与战术 战略：做什么；战术：怎么做。 Strategy 要讨论战略，首先要对其定义达成共识，战略与战术在英文中都可被译作 Strategy。战略是不同时空里投入产出比最高的要素，或者说战略是不同</description>
    </item>
    
    <item>
      <title>Insight - 谈谈规模效应与马太效应（一）</title>
      <link>https://kingcos.me/posts/2021/gmxy_mtxy/</link>
      <pubDate>Fri, 13 Nov 2020 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/2021/gmxy_mtxy/</guid>
      <description>Release Notes ↕ Date Notes 2021-10-16 首次提交 2021-11-13 补充 200916 内容 规模效应 —— 商业世界的万有引力定律 Q: 为什么叫做「商业世界的万有引力定律」？ A: 规模效应很重要，放弃规模效应就不能做商业。商业产品能做成什么样、有没有竞争对手是由规模效应决</description>
    </item>
    
    <item>
      <title>Swift 拾遗 - 方法</title>
      <link>https://kingcos.me/posts/2020/swift_methods/</link>
      <pubDate>Sun, 20 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/2020/swift_methods/</guid>
      <description>Date Notes 2020-09-20 首次提交 Preface 《Swift 拾遗》是一个关于 Swift 的新文章专辑，这个系列的文章将不会涉及基本语法的层面，而是尝试从底层「拾」起之前所忽视的内容。今天我们将一起简单探究 Swift 中的方法。 结构体 Swift 中的结构体是值类型</description>
    </item>
    
    <item>
      <title>Swift 拾遗 - 属性</title>
      <link>https://kingcos.me/posts/2016/swift_properties/</link>
      <pubDate>Fri, 18 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/2016/swift_properties/</guid>
      <description>Date Notes Info 2020-09-18 纳入 Swift 拾遗系列，并重新整理完善 Swift 5.3, Xcode 12.0 2017-04-27 扩充「延迟存储属性」部分并新增「devxoul/Then」一节 Swift 3.1, Xcode 8.3.2 2016-10-26 首次提交 Swift 3.0, Xcode 8.1 Beta 3 Preface 《Swift 拾遗》是一个关于 Swift 的新文章专辑，这个系列的文章</description>
    </item>
    
    <item>
      <title>万寿寺</title>
      <link>https://kingcos.me/reading/wanshou_temple/</link>
      <pubDate>Mon, 14 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/reading/wanshou_temple/</guid>
      <description>Name Author ISBN 万寿寺 王小波 9787530216699 文字是用来读，用来听，不是用来看的——要看不如去看小人书。不懂这一点，就只能写出充满噪声的文字垃圾。思想、语言、文字，是一体的，假如念起来乱糟糟，意思也不会好。 假如中国现代文学尚有</description>
    </item>
    
    <item>
      <title>乔纳森传</title>
      <link>https://kingcos.me/reading/about_jonathan_ive/</link>
      <pubDate>Wed, 02 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/reading/about_jonathan_ive/</guid>
      <description>Name Author Translators ISBN 乔纳森传 [美] 利恩德 · 卡尼（Leander Kahney） 汪琪、岳卉、王文雅 9787508643182 乔纳森对史蒂夫·乔布斯的传记作者沃尔特·艾萨克森（Walter Isaacson）说：「我一直都深知手工制作东西的美妙</description>
    </item>
    
    <item>
      <title>乔纳森传</title>
      <link>https://kingcos.me/reading/about_tim_cook/</link>
      <pubDate>Wed, 02 Sep 2020 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/reading/about_tim_cook/</guid>
      <description>Name Author Translators ISBN 蒂姆 · 库克传 [美] 利恩德 · 卡尼（Leander Kahney） 李世凡、梁德馨 9787521706468 准时生产的理念在美国通常被称作「精益生产」，最初是为了有效满足客户的需求，同时避免生产过剩。20 世纪六七十年代，在丰</description>
    </item>
    
    <item>
      <title>Swift 中的 @autoclosure</title>
      <link>https://kingcos.me/posts/2018/swift_autoclosure/</link>
      <pubDate>Sun, 23 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/2018/swift_autoclosure/</guid>
      <description>Date Notes Swift Xcode Source Code 2020-08-23 完善排版与表述 5.1 11.3 - 2018-04-05 更新并明确源代码所用版本 4.1 9.3 Swift 4.1 Release 2018-01-13 首次提交 4.0.3 9.2 - Preface Swift 中的闭包（Closure）十分类似于 Obj-C 中的 Block，但不仅写法更加简洁，也带来了许多新的特性。@autocl</description>
    </item>
    
    <item>
      <title>Swift 拾遗 - 闭包</title>
      <link>https://kingcos.me/posts/2020/swift_closure/</link>
      <pubDate>Sun, 23 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/2020/swift_closure/</guid>
      <description>Date Notes 2020-08-16 首次提交 Preface 《Swift 拾遗》是一个关于 Swift 的新文章专辑，这个系列的文章将不会涉及基本语法的层面，而是尝试从底层「拾」起之前所忽视的内容。今天我们将一起简单探究 Swift 中的闭包（Closure）。 闭包捕获</description>
    </item>
    
    <item>
      <title>Swift 拾遗 - 汇编</title>
      <link>https://kingcos.me/posts/2020/swift_with_asm/</link>
      <pubDate>Mon, 10 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/2020/swift_with_asm/</guid>
      <description>Date Notes 2020-08-10 首次提交 Preface 《Swift 拾遗》是一个关于 Swift 的新文章专辑，这个系列的文章将不会涉及基本语法的层面，而是尝试从底层「拾」起之前所忽视的内容。本文涉及了各个部分关于汇编的内容。 struct &amp;amp; class struct 分配在栈区 // main.swift struct Foo</description>
    </item>
    
    <item>
      <title>Swift 拾遗 - struct &amp; class</title>
      <link>https://kingcos.me/posts/2020/swift_struct_and_class/</link>
      <pubDate>Thu, 06 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/2020/swift_struct_and_class/</guid>
      <description>Date Notes 2020-08-06 首次提交 Preface 《Swift 拾遗》是一个关于 Swift 的新文章专辑，这个系列的文章将不会涉及基本语法的层面，而是尝试从底层「拾」起之前所忽视的内容。今天我们将一起简单探究 Swift 中的枚举 struct 和 class。&amp;quot;</description>
    </item>
    
    <item>
      <title>Swift 拾遗 - enum</title>
      <link>https://kingcos.me/posts/2020/swift_enum/</link>
      <pubDate>Sat, 01 Aug 2020 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/2020/swift_enum/</guid>
      <description>Date Notes 2020-08-01 首次提交 Preface 《Swift 拾遗》是一个关于 Swift 的新文章专辑，这个系列的文章将不会涉及基本语法的层面，而是尝试从底层「拾」起之前所忽视的内容。今天我们将一起简单探究 Swift 中的枚举 enum。 内存布局 内存布局（</description>
    </item>
    
    <item>
      <title>iOS 中的断言</title>
      <link>https://kingcos.me/posts/2020/assertion_in_ios/</link>
      <pubDate>Mon, 27 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/2020/assertion_in_ios/</guid>
      <description>Date Notes 2020-07-27 首次提交 Preface 断言（Assertion）是我们常用于 Debug 时的得力助手，其使得程序得以崩溃在早期，引起我们足够的重视，保障代码质量又不影响用户的体验。本文将简单介绍 iOS 中的断言类型以及使用方式与原理。 assert NSAssert</description>
    </item>
    
    <item>
      <title>Swift 拾遗 - 内联函数</title>
      <link>https://kingcos.me/posts/2020/swift_inline/</link>
      <pubDate>Sun, 26 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/2020/swift_inline/</guid>
      <description>Date Notes 2020-07-26 首次提交 Preface 《Swift 拾遗》是一个关于 Swift 的新文章专辑，这个系列的文章将不会涉及基本语法的层面，而是尝试从底层「拾」起之前所忽视的内容。今天我们将一起简单探究 Swift 中的内联函数。 编译器优化等级 由于内联</description>
    </item>
    
    <item>
      <title>Swift 拾遗 - inout</title>
      <link>https://kingcos.me/posts/2020/swift_inout/</link>
      <pubDate>Sat, 25 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/2020/swift_inout/</guid>
      <description>Date Notes 2020-07-25 首次提交 Preface 《Swift 拾遗》是一个关于 Swift 的新文章专辑，这个系列的文章将不会涉及基本语法的层面，而是尝试从底层「拾」起之前所忽视的内容。今天我们将一起简单探究修饰 Swift 中函数参数的 inout 关键字。 本质 我们声</description>
    </item>
    
    <item>
      <title>iOS 中的数组</title>
      <link>https://kingcos.me/posts/2020/array_in_ios/</link>
      <pubDate>Tue, 21 Jul 2020 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/2020/array_in_ios/</guid>
      <description>Preface 数组，是我们在开发中经常使用的数据结构，其使用一段连续的内存空间存储。在 Obj-C 中，数组的类型分为 NSArray 不可变数组 Objective-C NSArray &amp;amp; NSMutableArray 我们都知道，NSArray 是 Obj-C 中的不可变数组，而 NSMutableArray 是 Obj-C 的可变数组。这里我将 Obj-C 中几乎所有</description>
    </item>
    
    <item>
      <title>巨婴国</title>
      <link>https://kingcos.me/reading/the_giant_baby_nation/</link>
      <pubDate>Wed, 10 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/reading/the_giant_baby_nation/</guid>
      <description>Name Author ISBN 巨婴国 武志红 9787213076824 在幻想层面把别人的故事替换成自己的故事，用别人的成功掩盖自己的失败；一味突出所谓正能量，使阅读者丧失对现实世界的整体感；忽略对之所以是现在这个状态的原因的思考，用虚幻的未来麻醉自己</description>
    </item>
    
    <item>
      <title>Obj-C 中的 Boolean</title>
      <link>https://kingcos.me/posts/2020/booleans_in_objc/</link>
      <pubDate>Tue, 02 Jun 2020 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/2020/booleans_in_objc/</guid>
      <description>Date Notes 2020-06-02 首次提交 2020-06-16 增加「逻辑表达式」一节 Preface Boolean，即布尔值，通常用来表明逻辑中的真或假。但在 Obj-C 中，我们似乎既可以使用 BOOL 又可以使用 bool，既可以使用 YES/NO 又可以使用 true/false，那么它们到底</description>
    </item>
    
    <item>
      <title>乌合之众</title>
      <link>https://kingcos.me/reading/the_crowd/</link>
      <pubDate>Tue, 12 May 2020 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/reading/the_crowd/</guid>
      <description>Name Author Translator ISBN 乌合之众 [法] 古斯塔夫 · 勒庞（Gustave Le Bon） 戴光年 97875104075501 群体中的人有两个共同的特点：首先是每一个人个性消失，其次是他们的感情与思想都在关注同一件事。 群体中的个人行为表现具有如下四个特点：</description>
    </item>
    
    <item>
      <title>富爸爸穷爸爸</title>
      <link>https://kingcos.me/reading/rich_dad_poor_dad/</link>
      <pubDate>Fri, 24 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/reading/rich_dad_poor_dad/</guid>
      <description>Name Authors Translator ISBN 富爸爸穷爸爸 [美] 罗伯特 · 清崎（Robert Kiyosaki）、莎伦 · 莱希特（Sharon Lechter） 萧明 9787541138126 人们通常会做两件事，一些人在生活推着他转的同时，抓住生活赐予的每个机会；而另一些</description>
    </item>
    
    <item>
      <title>DeskMini 310 黑苹果组装记</title>
      <link>https://kingcos.me/posts/2020/deskmini_hack/</link>
      <pubDate>Wed, 01 Apr 2020 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/2020/deskmini_hack/</guid>
      <description>Update: 在苹果发布 m1 芯片的 Mac 后，一系列评测、数据把 Intel 着实吊打了一番。制程的优势不仅带来了性能的提升，更带来了能耗比的提升，基于此我预估近年新出的 Intel 芯片的 Mac 的贬值速度将远超以往（特意说明「近年」是因为近年的机</description>
    </item>
    
    <item>
      <title>[译] Swift 编译器</title>
      <link>https://kingcos.me/posts/2020/swift_compiler/</link>
      <pubDate>Thu, 05 Mar 2020 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/2020/swift_compiler/</guid>
      <description>作者 原文链接 Swift.org Swift Compiler Swift 主仓库中包含了 Swift 编译器和标准库的源代码、相关组件，如 SourceKit（用于 IDE 集成），以及 Swift 回归测试套件和实现级别的文档。 Swift 驱动库中包含了 Swift 编译器驱动（Driver）的新版实现，目</description>
    </item>
    
    <item>
      <title>Obj-C 中实例变量和类的访问控制</title>
      <link>https://kingcos.me/posts/2019/ivar_access_control_in_obj-c/</link>
      <pubDate>Fri, 17 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/2019/ivar_access_control_in_obj-c/</guid>
      <description>Date Notes 2019-06-14 增加 man nm 截图 2019-04-29 完善 @package 2019-03-30 gcc, clang; macOS 10.14.2 2020-01-17 勘误，部分细节调整 Preface Obj-C 中的实例变量，即 Instance Variables，简称为 ivar。在面向对象的概念中，一个类的对外暴露决定了其所提供的能力，对子类则需要提供一定的扩展性</description>
    </item>
    
    <item>
      <title>MustOverride 源码解读</title>
      <link>https://kingcos.me/posts/2019/dive_into_mustoverride/</link>
      <pubDate>Sun, 05 Jan 2020 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/2019/dive_into_mustoverride/</guid>
      <description>Release Notes ↕ Date Notes Source Code Commit / Tag 2019-12-07 首次提交 nicklockwood/MustOverride c63007e / 1.1 2020-01-05 增加 Extension 一节 - - 2021-04-26 增加 __attribute__((used)) 部分内容 - - How 这个库的使用非常简单，我们可以在需要子类必须重写的父类（或其分类）方法中放入 SUBCLASS_MUST_OVERRIDE; 宏即可： 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19</description>
    </item>
    
    <item>
      <title>「2019 · 结」</title>
      <link>https://kingcos.me/posts/2019/summary_of_2019/</link>
      <pubDate>Tue, 31 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/2019/summary_of_2019/</guid>
      <description>一年一度的年终又来了，而 2019 年是 21 世纪 10 年代的最后一年，即将迎来 21 世纪 20 年代 —— 2020 年。而在这一年又一年的更迭之际，又到了总结过去，展望未来的时间。 The Past 博客 ✒️ 今年四月中旬，迫于 GitHub Issue 的文章阅读体验略差，我</description>
    </item>
    
    <item>
      <title>Obj-C 中的对象</title>
      <link>https://kingcos.me/posts/2019/objects_in_obj-c/</link>
      <pubDate>Mon, 23 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/2019/objects_in_obj-c/</guid>
      <description>Date Notes Refer. 2019-03-18 首次提交 objc4-750 2019-08-18 抽离 isa 部分； 重整文章结构 Obj-C 中的 isa 指针 - kingcos 2019-08-29 增加 class_rw_t 等细节 - 2019-12-23 细节微调 objc4-756.2 Preface Obj-C 中的对象分为实例对象（Instance Object）、类对象（Class Object）、以及元类对象（Met</description>
    </item>
    
    <item>
      <title>iOS 多线程技术实践之 pthreads（一）</title>
      <link>https://kingcos.me/posts/2019/multithreading_techs_in_ios-1/</link>
      <pubDate>Sat, 14 Dec 2019 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/2019/multithreading_techs_in_ios-1/</guid>
      <description>Release Notes ↕ Date Notes Swift Xcode 2019-03-08 首次提交 4.2 10.1 2019-12-14 内容重整 5.1 10.3 Preface 在现代计算机中，操作系统一般都会支持多进程（Process）以及多线程（Thread）技术，使得其可以同时运行多个程序且效率更高。而我们在开发 iOS app 中也时常需</description>
    </item>
    
    <item>
      <title>将 Obj-C 代码翻译为 C/C&#43;&#43; 代码</title>
      <link>https://kingcos.me/posts/2019/obj-c_to_c&#43;&#43;/</link>
      <pubDate>Sat, 30 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/2019/obj-c_to_c&#43;&#43;/</guid>
      <description>Date Notes 2019-05-17 首次提交 2019-06-15 增加常用参数列表 2019-11-30 细节补充 Solution ➜ ~ clang --version Apple LLVM version 10.0.0 (clang-1000.11.45.5) Target: x86_64-apple-darwin18.2.0 Thread model: posix InstalledDir: /Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/bin Xcode 中，C/C++/Obj-C/C++ 的编译器是 clang，其通过 -rewrite-objc 参数可以将 Obj-C 代码翻译为 C++ 代码，即 clang -rewrite-objc main.m -o main.cpp；</description>
    </item>
    
    <item>
      <title>Obj-C 中的 Block</title>
      <link>https://kingcos.me/posts/2019/block_in_obj-c/</link>
      <pubDate>Sun, 24 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/2019/block_in_obj-c/</guid>
      <description>Date Notes Demo Source Code 2019-07-27 首次提交 - - 2019-11-24 重新整理部分内容；补充《Effective Objective-C 2.0》&amp;amp;《Objective-C 高级编程》相关内容 Block_in_Obj-C objc4-756.2、libclosure-73 Preface 从 OS X Snow Leopard 和 iOS 4</description>
    </item>
    
    <item>
      <title>双 11 买买买 - 开始抢购啦 💰</title>
      <link>https://kingcos.me/posts/2019/shopping_1111/</link>
      <pubDate>Mon, 11 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/2019/shopping_1111/</guid>
      <description>依稀还记得 618 那篇令我怀疑纯技术博客前途的一篇 😓 ——《618 买买买 - 这个 618 我都买了啥？》。转眼双十一又来了，又刚好遇到新域名切换，流量与搜索引擎收录都不甚乐观&amp;hellip; 不如再来一波？（笑 经历过这两</description>
    </item>
    
    <item>
      <title>设计模式之美</title>
      <link>https://kingcos.me/reading/beauties_of_design_patterns/</link>
      <pubDate>Thu, 07 Nov 2019 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/reading/beauties_of_design_patterns/</guid>
      <description>Name Author ISBN 设计模式之美 王争 - 设计原则 SOLID 原则 - SRP 单一职责原则 SOLID 原则 - OCP 开闭原则 SOLID 原则 - LSP 里式替换原则 SOLID 原则 - ISP 接口隔离原则 SOLID 原则 - DIP 依赖倒置原则 DRY 原则、KISS 原则、YAGNI 原则、LOD 法则 设计模式分类 创</description>
    </item>
    
    <item>
      <title>iOS 中的库与框架</title>
      <link>https://kingcos.me/posts/2019/libraries_in_ios/</link>
      <pubDate>Tue, 29 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/2019/libraries_in_ios/</guid>
      <description>Date Notes 2019-09-14 首次提交，持续更新完善 2019-09-22 适配 Xcode 11，持续更新完善 2019-10-29 添加 Demo：libraries_in_ios-demo Preface 随着软件工程的发展，很多我们需要的功能前人都已经很好地实现了，为了提高效率避免重复建设</description>
    </item>
    
    <item>
      <title>iOS 中的 Category</title>
      <link>https://kingcos.me/posts/2019/category_in_ios/</link>
      <pubDate>Wed, 23 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/2019/category_in_ios/</guid>
      <description>Date Notes Source Code Demo 2019-04-16 优化结构 - - 2019-04-13 首次提交 objc4-750、xnu-4903.221.2 Category in iOS 2019-10-23 添加首图，细节微调 - - Preface iOS 中的 Category 中文常译作分类、类别（为表述统一，本文将使用 Category 特指该技术）。我们经常会使用 Category 来</description>
    </item>
    
    <item>
      <title>浅尝 objc_msgSend</title>
      <link>https://kingcos.me/posts/2019/objc_msgsend/</link>
      <pubDate>Mon, 21 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/2019/objc_msgsend/</guid>
      <description>Date Notes Refers. 2019-07-20 首次提交 objc4-750.1 2019-09-07 完成「缓存、动态方法解析」等部分 Obj-C 中的对象 - kingcos 2019-10-21 补充《Effective Objective-C 2.0》相关内容 《〈编写高质量 iOS 与 OS X 代码的 52 个有效方法〉阅读笔记 - kingcos》 Preface Obj-C 中方法调用的本质是</description>
    </item>
    
    <item>
      <title>与 Visual Studio Code 共舞</title>
      <link>https://kingcos.me/posts/2019/coding_with_vs_code/</link>
      <pubDate>Sat, 12 Oct 2019 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/2019/coding_with_vs_code/</guid>
      <description>Date Notes 2019-08-30 涵盖 Debug Go &amp;amp; Ruby 配置、设置、插件 2019-11-12 增加 Debug CocoaPods &amp;amp; 插件 Preface VS Code（全称 Visual Studio Code），是微软推出的一款插件化编辑器。比 IDE 轻量，又比终端更容易上手，本文将罗列一些我在使用的设置、配置、插件等，也欢迎大家建</description>
    </item>
    
    <item>
      <title>iOS 中的 &#43;load 方法</title>
      <link>https://kingcos.me/posts/2019/&#43;load_in_ios/</link>
      <pubDate>Fri, 13 Sep 2019 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/2019/&#43;load_in_ios/</guid>
      <description>Release Notes ↕ Date Notes Source Code Demo 2019-04-20 首次提交 objc4-750 Load_Obj-C_Demo 2019-09-13 增加 Swift 等部分 - - Preface 在 iOS 开发中，我们经常会使用 +load 方法来做一些在 main 函数之前的操作，比如方法交换（Method Swizzle）等。那么本文就来简单了解下 iOS 中 +load 方法。 What iOS 中的 +load</description>
    </item>
    
    <item>
      <title>App Store 面面观</title>
      <link>https://kingcos.me/posts/2019/app_store/</link>
      <pubDate>Wed, 28 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/2019/app_store/</guid>
      <description>Preface 一款 app 从开发者手里到最终交付到用户桌面的整个过程中，编写代码只是其中小小的一环，我们需要搭建相应的开发环境、分发完整产物进行测试、并最终将其配以合适的宣传文案以供用户享用。本文将叙述作为一名一线 iOS 开</description>
    </item>
    
    <item>
      <title>SwiftTips in Reverse</title>
      <link>https://kingcos.me/posts/2019/swift_tips_in_reverse/</link>
      <pubDate>Tue, 27 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/2019/swift_tips_in_reverse/</guid>
      <description>Preface SwiftTips 是 John Sundell 在 GitHub 开源的 Swift 小技巧列表。随着 Swift 5 的发布以及 ABI 稳定，是时候再学习一遍 Swift 啦。本文将是该列表的实践版本，并保证文中代码的可运行性，且尽可能做到倒序日更。（But why in reverse? 🤫） 关于本文的代码，都可以在 swift-tips-in-practice</description>
    </item>
    
    <item>
      <title>Obj-C 中的 isa 指针</title>
      <link>https://kingcos.me/posts/2019/isa_in_objc/</link>
      <pubDate>Sun, 18 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/2019/isa_in_objc/</guid>
      <description>Date Notes Refer. 2019-08-18 首次提交 objc4-750.1 Preface isa 指针是所有 Obj-C 对象中都拥有的一个成员。因为除了继承链之外，Obj-C 还特有一条从实例对象到类对象、元类对象的链。而后者正是依靠 isa 而串联起来的，那么本文就将结合源码谈谈 Obj-C 中的 isa。</description>
    </item>
    
    <item>
      <title>C/C&#43;&#43; 中的位域与共用体</title>
      <link>https://kingcos.me/posts/2019/bit_field_union_in_cpp/</link>
      <pubDate>Sat, 17 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/2019/bit_field_union_in_cpp/</guid>
      <description>Date Notes Env 2019-08-17 首次提交 clang++、macOS 10.14.4 Preface C/C++ 中有许多「奇技淫巧」来让开发者能够以效率更高的方式使用内存，这也是一些高级语言着力去避讳的一点，但这种能够直面内存细节的「踏实感」让我个人觉得非常安心。</description>
    </item>
    
    <item>
      <title>10x 程序员工作法</title>
      <link>https://kingcos.me/reading/efficient_rules_of_work_for_programmers/</link>
      <pubDate>Thu, 01 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/reading/efficient_rules_of_work_for_programmers/</guid>
      <description>Name Author ISBN 10x 程序员工作法 郑晔 - 本质复杂度（Essential Complexity）和偶然复杂度（Accident Complexity）。 简单来说，本质复杂度就是解决一个问题时，无论怎么做都必须要做的事，而</description>
    </item>
    
    <item>
      <title>成为乔布斯</title>
      <link>https://kingcos.me/reading/becoming_steve_jobs/</link>
      <pubDate>Thu, 01 Aug 2019 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/reading/becoming_steve_jobs/</guid>
      <description>Name Author ISBN 成为乔布斯 [美] 布伦特 · 施兰德 / [美] 里克 · 特策利 9787508662404 这不是关于成功的故事，而是关于成长的故事。 他回答问题时字斟句酌，即使是回答意料之外的问题也是如此。 麦肯纳是史蒂夫早期最重要的导师，他曾经说过「</description>
    </item>
    
    <item>
      <title>Xcode 中的 Link Map 文件</title>
      <link>https://kingcos.me/posts/2019/link_map_file_in_xcode/</link>
      <pubDate>Sun, 28 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/2019/link_map_file_in_xcode/</guid>
      <description>Date Notes Xcode Swift 2019-04-01 首次提交 10.1 - 2019-04-16 增加 Swift 项目 10.1 4.2 2019-07-28 增加目录导图，折叠过长内容 - - Preface Link Map File，译作链接映射文件（下文将称 Link Map 文件）。Xcode 在构建可执行文件之前，需要先编译为目标文件（Object File）</description>
    </item>
    
    <item>
      <title>C/C&#43;&#43; 中的 const、static &amp; extern</title>
      <link>https://kingcos.me/posts/2019/const_static_extern_in_cpp/</link>
      <pubDate>Tue, 23 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/2019/const_static_extern_in_cpp/</guid>
      <description>Release Notes ↕ Date Notes Env 2019-07-23 首次提交 clang++、macOS 10.14.4 2021-04-25 完善 static 一节 - const 基础类型 int a = 0; a = 10; 对于基础类型，其在内存中存储的即是该类型的变量本身，经过 const 修饰后，此处的变量不可变，即常量。const 的位置并不</description>
    </item>
    
    <item>
      <title>[译] 摊平由「try?」造成的嵌套可选</title>
      <link>https://kingcos.me/posts/2019/0230-flatten-optional-try_zh/</link>
      <pubDate>Mon, 08 Jul 2019 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/2019/0230-flatten-optional-try_zh/</guid>
      <description>提案: SE-0230 作者: BJ Homer 审查管理员: John McCall 状态: 已实现 (Swift 5) 实现: apple/swift#16942 审查: (论坛帖子) (验收) 介绍 Swift 中的 try? 语句目前很容易引入嵌套可选（译者注：嵌套可选即类似 var foo: String?? 可选的可选类型）。而用户难以推断嵌套可选的产生原</description>
    </item>
    
    <item>
      <title>爱你就像爱生命</title>
      <link>https://kingcos.me/reading/love_you_as_loving_lives/</link>
      <pubDate>Fri, 21 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/reading/love_you_as_loving_lives/</guid>
      <description>Name Author ISBN 爱你就像爱生命 王小波、李银河 - 要对人和社会发一点议论就这么费劲，要是先入为主的决定了什么应该赞美，什么应该贬低就容易了，这就是写一流东西的难处。 有人说当孩子的时候最幸福，其实远非如此。如果说人在</description>
    </item>
    
    <item>
      <title>禅与摩托车维修艺术</title>
      <link>https://kingcos.me/reading/zen_and_the_art_of_motorcycle_maintenance/</link>
      <pubDate>Fri, 21 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/reading/zen_and_the_art_of_motorcycle_maintenance/</guid>
      <description>Name Author ISBN 禅与摩托车维修艺术 Robert Maynard Pirsig - 在阅读本书约 50% 进度时，觉得翻译有些生硬，继续读下去有点难以继续，因此暂停阅读。</description>
    </item>
    
    <item>
      <title>618 买买买 - 买家秀</title>
      <link>https://kingcos.me/posts/2019/shopping_618_show/</link>
      <pubDate>Tue, 18 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/2019/shopping_618_show/</guid>
      <description>Preface 首先让大家感受一下技术博客的衰落（逃，自从在 V2EX 简单地回复了一句我的购物清单链接，博客的浏览量暴增 10,000% +，可以看下图感受下～ 😅 下面我将把陆续到货的东西晒单给大家，虽然我也想开个 B 站录点视频，但没有器材，</description>
    </item>
    
    <item>
      <title>618 买买买 - 这个 618 我都买了啥？</title>
      <link>https://kingcos.me/posts/2019/shopping_618/</link>
      <pubDate>Sat, 15 Jun 2019 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/2019/shopping_618/</guid>
      <description>Preface 为了让大家窥（zhong）探（cao）我 618 都败（Buy）了什么，特此总结一份清单，方便给大家参考（手动滑稽 🌝。 话说发表那条带有本文链接的回复之后，昨天看了下网站的访问数据，流量瞬间暴增 11,900%&amp;hellip; 果然写技术博</description>
    </item>
    
    <item>
      <title>iOS 中的关联对象</title>
      <link>https://kingcos.me/posts/2019/associated_objects_in_ios/</link>
      <pubDate>Sat, 18 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/2019/associated_objects_in_ios/</guid>
      <description>Date Notes Source Code Demo 2019-05-18 首次提交 objc4-750 - Preface 提到 iOS 中的关联对象，即 Associated Objects，又可以算是一项利用 Runtime 的「黑魔法」。然而作为初学者，很难从其名称联想到是为谁关联对象，以及是如何关联对象的，那么今天就来一起研究下 iOS 中的</description>
    </item>
    
    <item>
      <title>[译] 在 Objective-C API 中指定可空性</title>
      <link>https://kingcos.me/posts/2019/nullability_in_obj-c/</link>
      <pubDate>Thu, 09 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/2019/nullability_in_obj-c/</guid>
      <description>作者 原文链接 Apple Developer Designating Nullability in Objective-C APIs 使用可空性（Nullability）标志或标志一块区域，以控制将 Objective-C 声明导入 Swift 中的方式。 概览 在 Objective-C 中，常用可以为空的指针来和对象的引用打交道，这（个空）就是 Objective-C 中的 nil。在 Swift 中，</description>
    </item>
    
    <item>
      <title>Swift/Obj-C 混编项目升级 Swift 5.0 踩坑</title>
      <link>https://kingcos.me/posts/2019/swift_4_to_5/</link>
      <pubDate>Wed, 08 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/2019/swift_4_to_5/</guid>
      <description>Date Note 2019-05-08 Swift 4.2 -&amp;gt; 5.0 2019-07-08 完善内容 Preface 在 ABI 稳定前，每次 Swift 升级都是一个比较「痛苦」的体验。这次笔者花费约总共一天时间将 Swift/Obj-C 混编项目升级到 Swift 5.0，其中还是有一些踩坑经验值得分享的。 Xcode 为了适配 Swift 5.0，首先需要安装 Xcode 1</description>
    </item>
    
    <item>
      <title>[译] URL 加载系统</title>
      <link>https://kingcos.me/posts/2019/url_loading_system/</link>
      <pubDate>Mon, 06 May 2019 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/2019/url_loading_system/</guid>
      <description>作者 原文链接 Apple Developer URL Loading System 使用标准互联网协议与 URL 交互，并和服务器通信。 框架： Foundation 概览 URL 加载系统通过标准协议比如 HTTPS 或自建协议提供对 URL 标识资源的访问。加载过程是异步的，所以 App 可以保持响应并当数据到达或出错时进行</description>
    </item>
    
    <item>
      <title>iOS 中的 &#43;initialize 方法</title>
      <link>https://kingcos.me/posts/2019/&#43;initialize_in_ios/</link>
      <pubDate>Sun, 21 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/2019/&#43;initialize_in_ios/</guid>
      <description>Date Notes Source Code Demo 2019-04-21 首次提交 objc4-750 - 2019-05-01 补充细节 - Initialize_Demo Preface 在 iOS 中，经常与 +load 相提并论的一个方法便是 +initialize。从方法名来看，它的作用是进行初始化，但不同于平时使用的 init，+initialize 是一个类方法</description>
    </item>
    
    <item>
      <title>iOS 项目持续集成实践（三）</title>
      <link>https://kingcos.me/posts/draft/ci_practice_in_ios-3/</link>
      <pubDate>Thu, 18 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/draft/ci_practice_in_ios-3/</guid>
      <description>Preface 上一篇中，主要讲述了如何使用 GitLab Runner 搭建 CI，其主要目的是在工程师开发、提交代码阶段集成了代码检查等工作。那么从代码到交付的过程该如何 CI 化呢？这次本文将聚焦于「使用 Jenkins 和 fastlane 搭建 CI」。 What How 环境搭建 关于我们</description>
    </item>
    
    <item>
      <title>iOS 项目持续集成实践（二）</title>
      <link>https://kingcos.me/posts/draft/ci_practice_in_ios-2/</link>
      <pubDate>Wed, 17 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/draft/ci_practice_in_ios-2/</guid>
      <description>Preface 自从「iOS 项目持续集成实践（一）」发布之后，发生了很多事情，原本计划持续更新的系列文章也因此没有更新。这次我将重拾该系列，本文的围绕核心为「使用 GitLab Runner 搭建 CI」。 What 在开始之前，我们首先要明确使用 CI 要</description>
    </item>
    
    <item>
      <title>Obj-C &amp; Swift 的类型内省与反射</title>
      <link>https://kingcos.me/posts/2019/type_introspection_and_reflection/</link>
      <pubDate>Mon, 08 Apr 2019 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/2019/type_introspection_and_reflection/</guid>
      <description>Date Notes Swift Demo 2019-04-08 首次提交 4.2 Type Introspection and Reflection Preface 许多编程语言中都有类型内省（又称自省，Introspection）和反射（Reflection）这两个概念，本文将探讨一下 Obj-C 和 Swift 中类型内省和反射的相关概念与具体使用。 What 维</description>
    </item>
    
    <item>
      <title>iOS 中的 KVC</title>
      <link>https://kingcos.me/posts/2019/kvc_in_ios/</link>
      <pubDate>Mon, 25 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/2019/kvc_in_ios/</guid>
      <description>Date Notes 2019-03-25 首次提交 Preface KVC，即 Key-Value Coding，译作键值编码（下文简称 KVC）。当对象兼容 KVC 时，可以通过统一的 API 访问对象中某个键对应的属性值。Cocoa 中的许多功能都依赖 KVC，比如，KVO、Cocoa 绑定</description>
    </item>
    
    <item>
      <title>Obj-C 中的重载与重写</title>
      <link>https://kingcos.me/posts/2019/override_and_overload_in_obj-c/</link>
      <pubDate>Wed, 20 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/2019/override_and_overload_in_obj-c/</guid>
      <description>Date Platform 2019-03-20 macOS 10.14.2 Preface 重载（Overload）和重写（Override）是面向对象语言中十分基本的两个概念，本文将谈谈 Obj-C 中的重载与重写。 重载 In some programming languages, function overloading or method overloading is the ability to create multiple functions of the same name with different implementations. Calls to an overloaded function will run a specific implementation of that</description>
    </item>
    
    <item>
      <title>[译] Swift 名字修饰（Name Mangling）</title>
      <link>https://kingcos.me/posts/draft/friday_qa_swift_name_mangling/</link>
      <pubDate>Fri, 15 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/draft/friday_qa_swift_name_mangling/</guid>
      <description>作者 原文链接 Gwynne Raskind Friday Q&amp;A 2014-08-08: Swift Name Mangling 译者注 1.「Name Mangling」在本文中将译作「名字修饰」，这主要是参考了 Wikipedia 中关于该项技术的翻译； 2.「Friday Q&amp;amp;A」中文意为「周五问与答」，但限于该名</description>
    </item>
    
    <item>
      <title>iOS 中的 KVO</title>
      <link>https://kingcos.me/posts/2019/kvo_in_ios/</link>
      <pubDate>Wed, 13 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/2019/kvo_in_ios/</guid>
      <description>Date Notes 2019-03-13 首次提交 Preface KVO 即 Key-Value Observing，译作键值监听（下文简称 KVO），通常用于监听对象的某个特定属性值的变化。本文将由浅入深，谈谈 iOS 中的 KVO。 How #import &amp;#34;ViewController.h&amp;#34; @interface Computer : NSObject @property (nonatomic, assign) int buttonClickTimes; @end @implementation Computer @end @interface ViewController () @property (nonatomic, strong) Computer *cpt; @end @implementation</description>
    </item>
    
    <item>
      <title>iOS 中的 NSObject</title>
      <link>https://kingcos.me/posts/2019/nsobject_in_ios/</link>
      <pubDate>Wed, 13 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/2019/nsobject_in_ios/</guid>
      <description>Date Notes Source Code 2019-03-13 首次提交 objc4-750、libmalloc-166.220.1、glibc-2.29 NSObject 实例对象的大小 // NSObject Obj-C -&amp;gt; C NSObject_IMPL struct NSObject_IMPL { Class isa; }; // 指向 objc_class 结构体的指针 typedef struct objc_class *Class; 将 Obj-C 源码通过 clang -rewrite-objc 翻译为 C++（其实</description>
    </item>
    
    <item>
      <title>Combine</title>
      <link>https://kingcos.me/posts/draft/combine_1/</link>
      <pubDate>Mon, 11 Mar 2019 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/draft/combine_1/</guid>
      <description>Foundation and UIKit/AppKit 中的异步机制： NotificationCenter：事件发生时执行一段代码（eg. 设备方向改变，软键盘显示或隐藏） 代理（Delegate）模式：定义代表另一个对象的代理对象（eg. AppDelegate 中定义当新的</description>
    </item>
    
    <item>
      <title>Objective-C 与 Swift 桥接中的坑</title>
      <link>https://kingcos.me/posts/2019/obj-c_swift_bridge_tips/</link>
      <pubDate>Thu, 17 Jan 2019 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/2019/obj-c_swift_bridge_tips/</guid>
      <description>Date Notes 2019-01-17 添加「Optional 与 Nullability」 添加「NSNotificationName 与 Notification.Name」 Preface Objective-C 与 Swift 的混编是全面转向 Swift 中的必经之路，本文即是这一过程中的踩坑「</description>
    </item>
    
    <item>
      <title>2018 年「终」总结</title>
      <link>https://kingcos.me/posts/2018/year_plan/</link>
      <pubDate>Mon, 10 Dec 2018 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/2018/year_plan/</guid>
      <description>今天是 2018 年 12 月 10 日，一年前的昨天，我从家里坐高铁到达了北京。还记得那天晚上，两个同学来火车站接我，我们一起坐公交去他们在昌平沙河的培训宿舍。一天的奔波加上本来就晕车的我，在公交行驶过高速后就难受的不行</description>
    </item>
    
    <item>
      <title>[译] 为 App 执行一次性设置</title>
      <link>https://kingcos.me/posts/2018/performing_one-time_setup_for_your_app/</link>
      <pubDate>Sun, 18 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/2018/performing_one-time_setup_for_your_app/</guid>
      <description>Release Notes ↕ 作者 原文链接 Apple Developer Performing One-Time Setup for Your App 确保 App 环境被正确配置。 框架 UIKit 概览 当用户第一次启动 App，我们可能希望通过一些一次性任务预备 App 环境。举个例子，可能想要： 从服务器下载必要的数据。 从 App 包（bundle）中</description>
    </item>
    
    <item>
      <title>[译] 关于 App 启动顺序</title>
      <link>https://kingcos.me/posts/2018/about_the_app_launch_sequence/</link>
      <pubDate>Fri, 16 Nov 2018 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/2018/about_the_app_launch_sequence/</guid>
      <description>Release Notes ↕ 作者 原文链接 Apple Developer About the App Launch Sequence 学习在启动时的代码执行顺序。 概览 一个 App 的启动需要经过许多复杂的步骤，其中大部分由 UIKit 自动处理。在启动过程中，UIKit 会调用 App 代理中的方法，因此我们可以执行自定义的任务。</description>
    </item>
    
    <item>
      <title>谈谈 iOS 中的 dyld_shared_cache</title>
      <link>https://kingcos.me/posts/2018/dyld_shared_cache/</link>
      <pubDate>Sun, 14 Oct 2018 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/2018/dyld_shared_cache/</guid>
      <description>Date Notes Source Code 2019-06-11 更新 Shortcuts 相关 - 2018-12-12 补充 dyld_shared_cache 路径来源 system_cmds-805.220.1 2018-10-14 首次提交 dyld-551.4 What iOS &amp;amp; macOS 作为操作系统，其中内置了许多系统库（Library）。dyld_shared_cache，即动态库共享缓存。自 iOS 3.1 后，所有系统动态库被集合成</description>
    </item>
    
    <item>
      <title>使用 usbmuxd 连接 iPhone</title>
      <link>https://kingcos.me/posts/2018/usbmuxd/</link>
      <pubDate>Sat, 08 Sep 2018 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/2018/usbmuxd/</guid>
      <description>macOS iOS libimobiledevice/usbmuxd 10.13.6 9.0.1 (Jailbroken) v1.0.8 What usbmuxd 全称「USB Multiplexing Daemon」，即 USB 多路传输驻留程序。当 Mac/PC 与 iPhone 之间使用 USB 数据线连接时，iTunes 与 iPhone 间的通信交流便是通过 usbmuxd 服务。usbmuxd 通过给定的端口号和 localhost 建立 TCP 连接。 在 Mac 端，</description>
    </item>
    
    <item>
      <title>Xcode 10 beta 趟坑</title>
      <link>https://kingcos.me/posts/2018/xcode_10_beta/</link>
      <pubDate>Wed, 25 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/2018/xcode_10_beta/</guid>
      <description>Xcode macOS 10 beta 2 10.14 beta 2 $(TeamIdentifierPrefix) Xcode 10 已知 Bug，无法自动替换。 Workaround 可以手动将 entitlements 文件的 Pass Type ID 值设置为 mobileversion 文件中com.apple.developer.pass-type-identifiers 对应值。 libstdc++ Xcode 10 取消了内置支持</description>
    </item>
    
    <item>
      <title>在 macOS 上进行直播推流</title>
      <link>https://kingcos.me/posts/2018/livestreaming_on_macos/</link>
      <pubDate>Sun, 22 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/2018/livestreaming_on_macos/</guid>
      <description>Date Platform Software 2018.07.22 macOS 10.14 beta 4 OBS Studio, Soundflower 2019.03.30 macOS 10.14.4 - 由于更换了电脑，上次好不容易折腾的配置也都无从参考，这次尽力把整个配置过程，以及音频输入输出的部分完善。直播推流使用了 OBS Studio，直播平台为 Bilibili。 欢迎来围</description>
    </item>
    
    <item>
      <title>将树莓派作为 AirPlay 音频服务器</title>
      <link>https://kingcos.me/posts/2018/airplay_on_pi/</link>
      <pubDate>Sun, 22 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/2018/airplay_on_pi/</guid>
      <description>Raspberry Pi Platform juhovh/shairplay 3 B Raspbian 4.14 765148f98f343b3b9911cc05504ac276cfc44c26 Info 树莓派是个很容易吃灰的设备，配置太低，又弃之可惜。何不作为 AirPlay 来解放你的有线音箱呢？ Solution SSH 或直接在树莓派的终端中运行以下命令，关于 SSH、VNC、替换源等操作请自行搜索。 Basic setup 安装依赖 sudo</description>
    </item>
    
    <item>
      <title>iOS 开发问题解决集锦</title>
      <link>https://kingcos.me/posts/2018/ios_dev_issue_list/</link>
      <pubDate>Tue, 10 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/2018/ios_dev_issue_list/</guid>
      <description>Unable to boot device in current state: Creating Xcode: 9.4.1 macOS: 10.13 在使用模拟器或者 xcodebuild test 时可能会出现此问题。 Solution 使用 xcrun simctl list 命令列出所有模拟器机型，用 xcrun simctl erase UDID 还原相应的设备，重试即可。 下面是一个 Python 3 脚本，可以使用 python erase_simulators.py -d &#39;DEVICE_TYPE&#39; 来直接还原相应设备类型的所有</description>
    </item>
    
    <item>
      <title>[译] 起底 SourceKit</title>
      <link>https://kingcos.me/posts/2018/uncovering_sourcekit/</link>
      <pubDate>Sun, 08 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/2018/uncovering_sourcekit/</guid>
      <description>作者 原文链接 JP Simard Uncovering SourceKit 为了支持一门新颖的语言（译者注：这里指 Swift），灵活的实时 IDE 特性，以及令人印象深刻的跨语言协同能力（译者注：这里指 Swift 与 Obj-C），Apple 必须开发一些新的基础工具。这里我们</description>
    </item>
    
    <item>
      <title>iOS 项目持续集成实践（一）</title>
      <link>https://kingcos.me/posts/2018/ci_practice_in_ios-1/</link>
      <pubDate>Sat, 07 Jul 2018 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/2018/ci_practice_in_ios-1/</guid>
      <description>Preface 一个软件工程项目从编写、到测试、再最终交付到用户通常有很多重复且固定的步骤。虽然作为开发者，我们的核心任务是编写代码，而这些其他的步骤却也不能忽视，持续集成（Continuous Integratio</description>
    </item>
    
    <item>
      <title>Zen of Git</title>
      <link>https://kingcos.me/posts/draft/zen_of_git/</link>
      <pubDate>Wed, 13 Jun 2018 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/draft/zen_of_git/</guid>
      <description>Preface 在现代软件开发的团队协作中，版本控制系统（Version Control System）必不可少，而 Git 已成为绝大多数的团队首选。本文将简单谈谈 Git 相关的工作流、工具链等，以及背后的思考、权衡，当然对于不同的团队，其选</description>
    </item>
    
    <item>
      <title>Supervisor 的安装与基本使用</title>
      <link>https://kingcos.me/posts/2018/supervisor/</link>
      <pubDate>Sun, 06 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/2018/supervisor/</guid>
      <description>Platform Supervisor macOS 10.13.4 3.3.4 Raspbian 4.14 3.3.1 Info Supervisor 是 Linux/UNIX 下的一个由 Python 编写的进程管理工具，可以很方便的用来启动、重启、关闭进程。 Solution Installation macOS 使用 HomeBrew 安装 brew install supervisor Raspbian (Linux) sudo apt-get install supervisor Usage 安装完成后，可以在查看该默认配置，但并非所有配置项均必须定义，可根据自</description>
    </item>
    
    <item>
      <title>使用 Homebrew 安装 Jenkins</title>
      <link>https://kingcos.me/posts/2018/jenkins_by_homebrew/</link>
      <pubDate>Sun, 06 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/2018/jenkins_by_homebrew/</guid>
      <description>Platform Notes macOS 10.13.4 Jenkins 2.114 &amp;amp; Java 8 Solution 安装 Homebrew /usr/bin/ruby -e &amp;#34;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&amp;#34; 安装 Jenkins brew install jenkins 运行 Jenkins # 当前窗口启动（关闭窗口则关闭 Jenkins） # $JENKINS_VERSION_CODE 为版本号，$PORT 为 Jenkins Web 页面端口号 # java -jar /usr/local/Cellar/jenkins/$JENKINS_VERSION_CODE/libexec/jenkins.war --httpPort=$PORT java -jar /usr/local/Cellar/jenkins/$JENKINS_VERSION_CODE/libexec/jenkins.war --httpPort=8080 # 后台启动（关闭窗口无影响） # $OUTPUT_FILENAME 为终端输出</description>
    </item>
    
    <item>
      <title>使用 Homebrew 安装 MySQL</title>
      <link>https://kingcos.me/posts/2018/mysql_by_homebrew/</link>
      <pubDate>Sun, 06 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/2018/mysql_by_homebrew/</guid>
      <description>Platform Notes macOS 10.13.4 MySQL 5.7.21 Solution 安装 Homebrew /usr/bin/ruby -e &amp;#34;$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)&amp;#34; 安装 MySQL（注意观察可能有错误信息，比如 brew link 失败，可能要先在相应文件夹下开启「写」权限后再手动尝试） brew install mysql 开启 MySQL 服务 # 现在启动，并加入自启动 brew services start mysql # 后台启动 mysql.server start 连接</description>
    </item>
    
    <item>
      <title>简单管理多版本 JDK</title>
      <link>https://kingcos.me/posts/2018/jdk_multiple_versions/</link>
      <pubDate>Sun, 06 May 2018 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/2018/jdk_multiple_versions/</guid>
      <description>Platform Notes macOS 10.13.4 JDK 8 &amp;amp; 9 Solution 安装 JDK 8 &amp;amp; 9（其他版本同理） vim ~/.zsh_rc（这里使用的是 BashShell，其他 Shell 自行替换） 文末追加： # Java export JAVA_8_HOME=$(/usr/libexec/java_home -v1.8) export JAVA_9_HOME=$(/usr/libexec/java_home -v9) # Default for Java 8 export JAVA_HOME=$JAVA_8_HOME alias java9=&amp;#39;export JAVA_HOME=$JAVA_9_HOME&amp;#39; alias java8=&amp;#39;export JAVA_HOME=$JAVA_8_HOME&amp;#39; 切换版本：java8 / java9 检查版本</description>
    </item>
    
    <item>
      <title>在 Swift 中尝试对数组元素弱引用</title>
      <link>https://kingcos.me/posts/2018/weakly_collections/</link>
      <pubDate>Thu, 08 Mar 2018 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/2018/weakly_collections/</guid>
      <description>Release Notes ↕ Date Notes Swift Xcode 2018-03-15 更新部分表述，并将题目扩展至集合类型 4.0 9.2 2018-03-08 首次提交 4.0 9.2 2021-05-25 内容组织微调 - - What 在 Swift 中，当我们创建一个数组，那么数组本身对于添加进去的对象元素默认是强引用（Strong）的，这会使得元素的引</description>
    </item>
    
    <item>
      <title>WWDC17 - 819 Designing for a Global Audience</title>
      <link>https://kingcos.me/posts/2017/wwdc-17-819/</link>
      <pubDate>Mon, 03 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/2017/wwdc-17-819/</guid>
      <description>Date Notes 2017-07-03 首次提交 WWDC 2017 是苹果开发者大会的 2017 版。Session 822 简要介绍了为什么要将 App 为全球受众适配，以及其中的一些注意点。 Why 更好的用户体验（Better user experience） 不要仅仅止步于言语和插图不冒</description>
    </item>
    
    <item>
      <title>WWDC17 - 822 App Icon Design</title>
      <link>https://kingcos.me/posts/2017/wwdc-17-822/</link>
      <pubDate>Mon, 03 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/2017/wwdc-17-822/</guid>
      <description>Date Notes 2017-07-03 首次提交 WWDC 2017 是苹果开发者大会的 2017 版。Session 822 简要介绍了设计 App 的图标（Icon）时需要注意的点。 图标设计 象征（Metaphor） 即人们可以根据图标所联想的事物。 简约（Simplicity）</description>
    </item>
    
    <item>
      <title>WWDC17 - 102 Platform State of the Union</title>
      <link>https://kingcos.me/posts/2017/wwdc-17-102/</link>
      <pubDate>Sun, 02 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/2017/wwdc-17-102/</guid>
      <description>Date Notes Swift Xcode 2017-07-02 首次提交 4.0 beta 9.0 beta WWDC 2017 是苹果开发者大会的 2017 版，今年的更新很多，而且涉及多种平台，开发工具，以及 Swift 语言本身。102 这场演讲涉及了新系统以及新工具中的 features，但没有过多深入。因为后续还有</description>
    </item>
    
    <item>
      <title>WWDC17 - 823 Designing Glyphs</title>
      <link>https://kingcos.me/posts/2017/wwdc-17-823/</link>
      <pubDate>Sun, 02 Jul 2017 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/2017/wwdc-17-823/</guid>
      <description>Date Notes 2017-07-02 首次提交 WWDC 2017 是苹果开发者大会的 2017 版。Session 823 简要介绍了 Glyph（字形，符号等）的设计原则等。 Glyph &amp;amp; Icon Glyph 是单色的，可以用代码（程序化）添加颜色。 Icon 是彩色的，高渲染的资源文件。 高效的 Glyph 设计原</description>
    </item>
    
    <item>
      <title>浅谈 iOS 应用启动过程</title>
      <link>https://kingcos.me/posts/2017/ios_app_start_up/</link>
      <pubDate>Tue, 28 Mar 2017 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/2017/ios_app_start_up/</guid>
      <description>Date Notes Swift Xcode 2017-05-26 CS193p UIApplication 3.1 8.3.2 2017-03-28 首次提交 3.0 8.2.1 Preface 首先要感谢没故事的卓同学大大送的泊学会员，在泊学学了几节课，了解了很多不同角度的 iOS 开发知识。这篇文章就启发自其 iOS 101 中的一个纯手工的 Single View Application 一文。但本文将更加深入的叙述了</description>
    </item>
    
    <item>
      <title>从 0 开始使用 Docker 快速搭建 Hadoop 集群环境</title>
      <link>https://kingcos.me/posts/2017/docker_for_hadoop/</link>
      <pubDate>Mon, 27 Mar 2017 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/2017/docker_for_hadoop/</guid>
      <description>Date Notes Hadoop Other 2017-03-27 首次提交 2.7.2 Docker CE, IntelliJ IDEA 2016.3 Preface 自从学习 iOS/Swift 以来，就没有太多时间分配给 Java 专业课，毕竟我不是个三心二用还能样样学好的人。不过作为大三的专业课，分布式计算技术还是有去上课的，毕竟不能最后挂科吧 :] 曾有人说，「</description>
    </item>
    
    <item>
      <title>探究 UIViewController 生命周期</title>
      <link>https://kingcos.me/posts/2017/uiviewcontroller_life_cycle/</link>
      <pubDate>Fri, 10 Mar 2017 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/2017/uiviewcontroller_life_cycle/</guid>
      <description>Release Notes ↕ Date Notes Swift Xcode 2017-03-10 首次提交 3.0 8.2.1 前言 对象的生命周期一直是开发者所需要关心的，教授 CS193p 的老师 Paul 也详细的讲述了 UIViewController 的生命周期。为了记述这一过程，故作此文。由于 Xcode 提供了纯代码和 Storyboard（Xib 同理）两种</description>
    </item>
    
    <item>
      <title>Swift 中的 Selector</title>
      <link>https://kingcos.me/posts/2017/swift_selector/</link>
      <pubDate>Tue, 31 Jan 2017 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/2017/swift_selector/</guid>
      <description>Release Notes ↕ Date Notes Swift Xcode 2017-01-31 首次发布 （简书 &amp;amp; 掘金） 3.0 8.2.1 Preface Focus，即专注。笔者希望可以尽力将一些不是那么透彻的点透过 Demo 和 Source Code 而看到其本质。 由于国内软件开发仍很大程度依赖国外的语言、知识，所以该博客中的术语将使用</description>
    </item>
    
    <item>
      <title>初探 iOS 中自定义 UIView 的初始化过程</title>
      <link>https://kingcos.me/posts/2016/uiview_life_cycle/</link>
      <pubDate>Fri, 04 Nov 2016 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/2016/uiview_life_cycle/</guid>
      <description>Release Notes ↕ Date Notes Swift Xcode 2017-03-07 首次提交 3.0 8.2 Beta 1 awakeFromNib() init(frame:) init(coder:) Update 2017.03.07 - UIView 生命周期 Demo 由于本文之前虽有代码，但没有相应的 Demo，借探究 UIViewController 生命周期之际，加入了 UIView 生命周期的 Demo。您可以在 https://github.com/kingcos/UIViewController-UIView-LifecycleDemo 查看、下载。 2017.02.27 - CS193p Lecture 04 通常，UIView</description>
    </item>
    
    <item>
      <title>Git/GitHub－Note</title>
      <link>https://kingcos.me/posts/2015/depr_gitgithub-notes/</link>
      <pubDate>Tue, 24 Nov 2015 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/2015/depr_gitgithub-notes/</guid>
      <description>&lt;blockquote class=&#34;blockquote-center&#34;&gt;
The things U must know about Git/GitHub.
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>如何解决 MySQL 中文数据问题</title>
      <link>https://kingcos.me/posts/2015/depr_mysqlqa/</link>
      <pubDate>Wed, 18 Nov 2015 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/2015/depr_mysqlqa/</guid>
      <description>&lt;blockquote class=&#34;blockquote-center&#34;&gt;
These tips are just backup for myself.
If something was wrong, please tell me.
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>iDay-11.12 ~ 12.20</title>
      <link>https://kingcos.me/posts/2015/depr_idaily/</link>
      <pubDate>Fri, 13 Nov 2015 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/2015/depr_idaily/</guid>
      <description>2015.11.12 现在已是 11 月 13 日凌晨 0: 30 分左右，我一个人还在电脑旁。宿舍的其他人都睡了，这次是真的睡，没有什么人玩手机。 很早之前想在博客上加一个 Time Line 的功能但是没有深究，因为我不想在微博上大放厥词（可能言重了吧，毕竟</description>
    </item>
    
    <item>
      <title>Java 程序语言设计小作业</title>
      <link>https://kingcos.me/posts/2015/depr_javawf/</link>
      <pubDate>Wed, 28 Oct 2015 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/2015/depr_javawf/</guid>
      <description>&lt;blockquote class=&#34;blockquote-center&#34;&gt;
Java 代码——在 URL 使用 SAX 解析 XML
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>What Have I Learnt From This Chapter</title>
      <link>https://kingcos.me/posts/2015/depr_cs-c2-bcc/</link>
      <pubDate>Tue, 13 Oct 2015 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/2015/depr_cs-c2-bcc/</guid>
      <description>&lt;blockquote class=&#34;blockquote-center&#34;&gt;
NIT Excellent Engineer Program.
Thanks for Thomas.
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>The Second Half of 2015 Plan</title>
      <link>https://kingcos.me/posts/2015/depr_the-2nd-half-year-plan/</link>
      <pubDate>Tue, 22 Sep 2015 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/2015/depr_the-2nd-half-year-plan/</guid>
      <description>&lt;blockquote class=&#34;blockquote-center&#34;&gt;
计划还是要有的，万一完成了呢？
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>Learning Swift 2.1 - Note &amp; Code</title>
      <link>https://kingcos.me/posts/2015/depr_swift-2/</link>
      <pubDate>Sat, 19 Sep 2015 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/2015/depr_swift-2/</guid>
      <description>&lt;blockquote class=&#34;blockquote-center&#34;&gt;
Based on
[The Swift Programming Language](https://developer.apple.com/library/ios/documentation/Swift/Conceptual/Swift_Programming_Language/)
Swift 2 Edition
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>初学 Java 4 Android - Note &amp; Code</title>
      <link>https://kingcos.me/posts/2015/depr_j4a/</link>
      <pubDate>Sun, 13 Sep 2015 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/2015/depr_j4a/</guid>
      <description>&lt;blockquote class=&#34;blockquote-center&#34;&gt;
源自《[Java 4 Android](http://study.163.com/course/courseMain.htm?courseId=201001)》-- [Mars](http://www.marschen.com/portal.php)
如有错误，希望指出。
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>Tapole 记（下）</title>
      <link>https://kingcos.me/posts/2015/depr_1st-tapole_3/</link>
      <pubDate>Fri, 21 Aug 2015 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/2015/depr_1st-tapole_3/</guid>
      <description>&lt;blockquote class=&#34;blockquote-center&#34;&gt;
已经不记得自己的眼睛是何时近视的了，
架在鼻上，挂在耳边，放在眼前的眼镜已经和我离不开了。
Tapole 的最终产品终于来到，这样一款非数码产品的开箱体验会是什么呢...
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>Tapole 记（中）</title>
      <link>https://kingcos.me/posts/2015/depr_1st-tapole_2/</link>
      <pubDate>Sun, 16 Aug 2015 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/2015/depr_1st-tapole_2/</guid>
      <description>&lt;blockquote class=&#34;blockquote-center&#34;&gt;
已经不记得自己的眼睛是何时近视的了，
架在鼻上，挂在耳边，放在眼前的眼镜已经和我离不开了。
Tapole 免费试戴的镜架到了，让我们一起来看看吧...
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>Tapole 记（上）</title>
      <link>https://kingcos.me/posts/2015/depr_1st-tapole_1/</link>
      <pubDate>Sun, 09 Aug 2015 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/2015/depr_1st-tapole_1/</guid>
      <description>&lt;blockquote class=&#34;blockquote-center&#34;&gt;
已经不记得自己的眼睛是何时近视的了，
架在鼻上，挂在耳边，放在眼前的眼镜已经和我离不开了。
作为一名普通消费者加天秤座，来跟我一起看看网上配镜前的纠结吧...
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>寻找下一个地球</title>
      <link>https://kingcos.me/posts/2015/depr_finding-another-earth/</link>
      <pubDate>Sat, 01 Aug 2015 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/2015/depr_finding-another-earth/</guid>
      <description>&lt;blockquote class=&#34;blockquote-center&#34;&gt;
人类在宇宙中是如此的渺小，却又如此的幸运。这个蓝色星球承载着我们的一切。
宇宙如此广袤，地球绝不是孑然一身，让我们跟着 NASA，寻找下一个地球...
*本文摘自 NASA 官方网站的一篇题为“[Finding Another Earth](http://www.nasa.gov/jpl/finding-another-earth)”的文章，经本人翻译放出。*
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>这一年，我，去哪里了...</title>
      <link>https://kingcos.me/posts/2015/depr_where-did-i-go/</link>
      <pubDate>Thu, 23 Jul 2015 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/2015/depr_where-did-i-go/</guid>
      <description>&lt;blockquote class=&#34;blockquote-center&#34;&gt;
这篇文章原本计划给某些人看的，不过，这里还不想被人发现，还是等更好的时候吧。
文笔不好，从小写作难，情商低，大家小心被吓着。
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>C&#43;&#43; 编程代码风格指南</title>
      <link>https://kingcos.me/posts/2015/depr_cpp_style_guide/</link>
      <pubDate>Fri, 17 Apr 2015 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/2015/depr_cpp_style_guide/</guid>
      <description>&lt;blockquote&gt;
&lt;p&gt;&lt;em&gt;PS: 为本文标题增加空格 &amp;amp; 内容表格格式修复&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;hr&gt;
&lt;blockquote&gt;
&lt;p&gt;前言：
本文翻译自&lt;a href=&#34;http://geosoft.no/development/cppstyle.html&#34;&gt;C++ Programming Style Guidelines原文地址&lt;/a&gt;
参考资料：Google机翻
本文仅供参考，如有错误希望指出。如有侵权，会立即删除，决不用于商业用途。&lt;/p&gt;
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>2015 年 3 月苹果发布会后感</title>
      <link>https://kingcos.me/posts/2015/depr_apple-conference_03/</link>
      <pubDate>Sat, 04 Apr 2015 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/2015/depr_apple-conference_03/</guid>
      <description>&lt;blockquote class=&#34;blockquote-center&#34;&gt;
Apple Watch, new MacBook...
Designed by Apple 还有哪些亮点呢？
让我们谈谈这次的 Apple 发布会吧。
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>Count On Me 歌词翻译</title>
      <link>https://kingcos.me/posts/2015/depr_count-on-me/</link>
      <pubDate>Fri, 03 Apr 2015 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/2015/depr_count-on-me/</guid>
      <description>&lt;blockquote class=&#34;blockquote-center&#34;&gt;
Count On Me 是一首很暖心的歌（原唱 Bruno Mars）。
Connie Talbot 的翻唱的却充满童真，
让我们一起欣赏下吧～
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>The First Half of 2015 Plan</title>
      <link>https://kingcos.me/posts/2015/depr_the-1st-half-year-plan/</link>
      <pubDate>Sat, 21 Feb 2015 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/2015/depr_the-1st-half-year-plan/</guid>
      <description>&lt;blockquote class=&#34;blockquote-center&#34;&gt;
计划还是要有的，万一完成了呢？
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>王自如对话 Moto 总裁 Rick Osterloh</title>
      <link>https://kingcos.me/posts/2015/depr_moto/</link>
      <pubDate>Sun, 01 Feb 2015 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/2015/depr_moto/</guid>
      <description>&lt;blockquote class=&#34;blockquote-center&#34;&gt;
Moto回来了。
这次的回归是否能使它在国内的市场涅磐重生？
&lt;/blockquote&gt;</description>
    </item>
    
    <item>
      <title>How To Choose A P.C. In 2014?</title>
      <link>https://kingcos.me/posts/2014/depr_how-to-choose-pc/</link>
      <pubDate>Mon, 09 Jun 2014 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/2014/depr_how-to-choose-pc/</guid>
      <description>这篇文章是 2014 年 6 月 11 日发布在点点轻博客的，本文和手机选购那篇属于同一风格，但由于对电脑了解不深入，所以只能是略微谈谈，不过也算是尽力了，软件专业买电脑的童鞋就不要看了，怕误导你们。 如何选购个人电脑 电脑</description>
    </item>
    
    <item>
      <title>How To Choose A Phone In 2014?</title>
      <link>https://kingcos.me/posts/2014/depr_how-to-choose-phone/</link>
      <pubDate>Mon, 09 Jun 2014 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/2014/depr_how-to-choose-phone/</guid>
      <description>这篇文章是 2014 年 6 月 9 日发布在点点轻博客的，（当时刚结束高考啊&amp;hellip;泪奔），所以略有时效性，但由于这篇文章当我今年再看的时候，颇有感慨，所以放在这里，留存吧，也对大家买手机还是有些许参考性的，</description>
    </item>
    
    <item>
      <title>【Future】骑车回家幻想记</title>
      <link>https://kingcos.me/posts/2013/depr_dreaming-in-the-way/</link>
      <pubDate>Fri, 26 Apr 2013 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/2013/depr_dreaming-in-the-way/</guid>
      <description>我要的幸福 注：此文最早由本人发表于萌面大道吧，后转于此。 今天，一个人骑车回家，洛阳的春天又像孩子一样变得热烈起来，整个空气中布满了烦躁，可我还是那么冷静，听说不能留校后便背起书包，骑车回家！ 我不觉得我</description>
    </item>
    
    <item>
      <title>【Friend Ship】仅以此文献给高班和总统</title>
      <link>https://kingcos.me/posts/2013/depr_only-for-gyy-lmb/</link>
      <pubDate>Sat, 06 Apr 2013 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/posts/2013/depr_only-for-gyy-lmb/</guid>
      <description>注：在很早之前，我的个人贴吧就开张了，不过到现在，带上自己也只有区区 6 人，两年前我在那里写过两篇，这就是其中之一。我文笔不好，不善言谈，但我也要写下来，因为回忆吧。到现在，我仍然没有他们的联系方式，他</description>
    </item>
    
    <item>
      <title>About · 关于</title>
      <link>https://kingcos.me/about/</link>
      <pubDate>Thu, 01 Jan 1970 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/about/</guid>
      <description>Hi there 👋 🤠 I am an iOS app developer from China. 👨‍💻 I am currently working on iOS app development in Swift / Objective-C 💪 I also code in Go / Ruby / Python / TypeScript / Dart &amp;hellip; ❤️ I love the stuffs that make us live better and easier, such as most of &amp;rsquo;s products 📤 I share my points in my blog: kingcos.me / Weixin Public Account (萌面大道) 🎙️ I also share my life in my vlog: Bilibili /</description>
    </item>
    
    <item>
      <title>Links</title>
      <link>https://kingcos.me/links/</link>
      <pubDate>Thu, 01 Jan 1970 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/links/</guid>
      <description> Linking with Others 🔗
  Daily Growing · by Zansy  </description>
    </item>
    
    <item>
      <title>Perspective</title>
      <link>https://kingcos.me/perspective/</link>
      <pubDate>Thu, 01 Jan 1970 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/perspective/</guid>
      <description>Thinking with Perspectives 💡 2020 这是一个需要英雄的年代。但最近「打脸」的事情太多了，我想谈谈「打脸」。随着信息化的加深，个人获取信息的速度和深度都有了很大程度的提升。但很遗憾，信息量的递增对于信息的筛选和甄别造成了更大的压</description>
    </item>
    
    <item>
      <title>Reading</title>
      <link>https://kingcos.me/read/</link>
      <pubDate>Thu, 01 Jan 1970 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/read/</guid>
      <description>Reading with Perspectives 💭 2022 Status Name Rating √ 纳瓦尔宝典 ★★★★★ 2021 Status Name Rating - 非暴力沟通 - - 1984 - - Linkers &amp;amp; Loaders - √ 小王子 ★★★★★ 2020 Status Name Rating √ 富爸爸穷爸爸 ★★★★★ √ 乌合之众 ★★★★☆ √ 巨婴国 ★★★★★ √ 乔纳森传 ★★★★☆ PAUSED 集异璧之大成 -</description>
    </item>
    
    <item>
      <title>Travelling</title>
      <link>https://kingcos.me/travelling/</link>
      <pubDate>Thu, 01 Jan 1970 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/travelling/</guid>
      <description>Travelling the Beauties 🏞️ Instagram · @kingcos_v 2020 北京 天坛公园 颐和园 清华大学艺术博物馆 中国国家图书馆 保利艺术博物馆 国家动物博物馆 观复博物馆 首都博物馆 2019 北京 圆明园 玉渊潭公园 景山公园 青岛 栈桥 花石楼 青岛海底世界 八大关风景区 2018 北京 故宫博物院</description>
    </item>
    
    <item>
      <title>Words</title>
      <link>https://kingcos.me/words/</link>
      <pubDate>Thu, 01 Jan 1970 00:00:00 +0000</pubDate>
      
      <guid>https://kingcos.me/words/</guid>
      <description>Talking to This World 🌍 2020 从巴黎圣母院失火到科比去世，虽然我不是他们的信徒或忠实铁粉，但越长大就会发现，有些事情真的一旦错过就再也无法挽回。特别是，如果你曾有哪怕一瞬想到要去做。 2020.04.01 理解也许并不等于包容与接受。 2020.02.29 2019 打</description>
    </item>
    
  </channel>
</rss>
